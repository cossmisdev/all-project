// Задание №1
// Создайте функцию checkTask которая выводит в консоль строку:
// Hello World!

// function checkTask(str){
//   console.log(str);
// }
// checkTask('Hello World')

// let checkTask = function (str) {
//   console.log(str);
// };
// checkTask("Hello World");

// Задание №2
// Напишите функцию checkTask(), которая при вызове будет возвращать строку:
// Привет, JavaScript!

// function checkTask(str) {
//   console.log(`Привет, ${str}!`);
// }
// checkTask("JavaScript");

// let checkTask = function (str) {
//   console.log(`Привет, ${str}!`);
// };
// checkTask("JavaScript");

// Задание №3
// Создайте функцию checkTask(), которая принимает в качестве аргумента два числа и возвращает их сумму.
// Например, для чисел 2 и 20 функция возвратит:
// 22

// checkTask(20, 2);
// function checkTask(a, b) {
//   let sum = a + b;
//   console.log(sum);
// }

// let checkTask = function (a, b) {
//   let sum = a + b;
//   console.log(sum);
// };
// checkTask(20, 2);

// Задание №4
// Напишите функцию checkTask(), которая в качестве аргумента принимает число - возраст.
// Если возраст больше или равен 18 возвратите строку:
// Добро пожаловать
// иначе:
// Вход запрещен

// checkTask(18);
// function checkTask(num) {
//   if (num >= 18) {
//     console.log("Добро пожаловать");
//   } else {
//     console.log("Вход запрещен!");
//   }
// }

// let checkTask = function (num) {
//   if (num >= 18) {
//     console.log("Добро пожаловать");
//   } else {
//     console.log("Вход запрещен!");
//   }
// };
// checkTask(8);

// Задание №5
// Напишите функцию checkTask(), которая принимает целое число и возвращает сумму всех его цифр.
// Например, для числа , функция должна вернуть:
// 15
// так как 4 + 5 + 6 = 15

// checkTask(4, 5, 6);
// function checkTask(a, b, c) {
//   let sum = a + b + c;
//   console.log(sum);
// }

// let checkTask = function (a, b, c) {
//   sum = a + b + c;
//   console.log(sum);
// };
// checkTask(4, 5, 6);

// Задание №6
// Напишите функцию checkTask(), которая принимает два аргумента, строку и букву.
// Функция должна возвращать число повторений переданной буквы в строке.
// Например, если были переданы такие аргументы - , функция должна возвратить:
// 2
// т.к в строке 'hello' две буквы 'l'

// checkTask("hello", "l");
// function checkTask(str, l) {
//   sum = 0;
//   for (let i of str) {
//     if (i === l) {
//       sum++;
//     }
//   }
//   console.log(sum);
// }

// let checkTask = function (str, l) {
//   sum = 0;
//   for (let i of str) {
//     if (i === l) {
//       sum++;
//     }
//   }
//   console.log(sum);
// };
// checkTask("hello", "l");

// Задание №7
// Напишите функцию, которая принимает параметром элемент и возвращает его тип (typeof)

// checkTask("Azamat");
// function checkTask(name) {
//   console.log(typeof name);
// }

// let checkTask = function (name) {
//   console.log(typeof name);
// };
// checkTask("Azamat");

// Задание №8

// Напишите функцию checkTask которая принимает число и возвращает его факториал.
// Факториал числа - это умножение всех порядковых чисел от 1 до самого числа.
// Например для числа 5, функция должна возвратить:
// 120

// т.к 1x2x3x4x5 = 120
// для числа 6, результатом будет:
// 720

// т.к 1x2x3x4x5x6 = 720

// function checkTask(num) {
//   let sum = 1;
//   for (let i = 1; i <= num; i++) {
//     sum *= i;
//   }
//   console.log(sum);
// }
// checkTask(5);

// Задание №9
// Напишите функцию, которая принимает строку в
// качестве аргумента и возвращает количество гласных,
//которые содержатся в строке. Гласными являются [а], [о], [и], [ы], [у] и [э]
// К примеру:
// vowel('достопримечательность') // --> 7
// vowel('субстанционализирующийся') // --> 11

// function checkTask(str) {
//   sum = 0;
//   for (let i of str) {
//     if (
//       i === "а" ||
//       i === "о" ||
//       i === "и" ||
//       i === "ы" ||
//       i === "у" ||
//       i === "э" ||
//       i === "я" ||
//       i === "е" ||
//       i === "ю"
//     ) {
//       sum++;
//     }
//   }
//   console.log(sum);
// }
// checkTask("достопримечательность");

// let checkTask = function (str) {
//   sum = 0;
//   for (let i of str) {
//     if (
//       i === "а" ||
//       i === "о" ||
//       i === "и" ||
//       i === "ы" ||
//       i === "у" ||
//       i === "э" ||
//       i === "я" ||
//       i === "е" ||
//       i === "ю"
//     ) {
//       sum++;
//     }
//   }
//   console.log(sum);
// };
// checkTask("субстанционализирующийся");

// Задание №10
// Напишите функцию которая принимает массив из чисел. Находит количество четных чисел в массиве и их сумму. И выведите их на экран.
// К примеру:
// let arr = [1, 2, 3, 4, 5, 6]
// `Четные числа в массиве: ${newArr} их сумма равна ${sum}`
// Четные числа в массиве: [2, 4, 6] их сумма равна 12

// checkTask([1, 2, 3, 4, 5, 6]);

// function checkTask(arr) {
//   sum = 0;
//   for (let i of arr) {
//     if (i % 2 === 0) {
//       sum += i;
//     }
//   }
//   console.log(sum);
// }

// let checkTask = function (arr) {
//   sum = 0;
//   for (let i of arr) {
//     if (i % 2 === 0) {
//       sum += i;
//     }
//   }
//   console.log(sum);
// };
// checkTask([1, 2, 3, 4, 5, 6]);

// Задание № 11
// Напишите функцию, которая принимает массив с числами и выводит количество отрицательных чисел в этом массиве
// Пример: [7, -5, -29, 0, 62, 4, 5, -6, -27]
// Вывод: //4

// function checkTask(arr) {
//   sum = 0;
//   for (let i of arr) {
//     if (i < 0) {
//       sum++;
//     }
//   }
//   console.log(sum);
// }
// checkTask([7, -5, -29, 0, 62, 4, 5, -6, -27]);

// let checkTask = function (arr) {
//   sum = 0;
//   for (let i of arr) {
//     if (i < 0) {
//       sum++;
//     }
//   }
//   console.log(sum);
// };
// checkTask([7, -5, -29, 0, 62, 4, 5, -6, -27]);

// Задание № 12
// Создайте функцию rgb(), которая будет принимать три числовых аргумента
// и возвращать строку вида «rgb(23,100,134)». Если аргументы не заданы,
//  считать их равными нулю.

// function rgb(r, g, b) {
//   if (r === undefined && g === undefined && b === undefined) {

//   }
// }
// console.log(rgb(23, 100, 134));

// Задание № 13
// Напишите функцию, которая принимает два аргумента и возвращает все числа,
//  которые делятся на данный делитель. Первый аргумент - это массив чисел, а второй - делитель.
// Пример: divisible([1, 2, 3, 4, 5, 6], 2)
// Вывод: [2, 4, 6]

// function checkTask(arr, n) {
//   for (let i of arr) {
//     if (i % n === 0) {
//       console.log(i);
//     }
//   }
// }
// checkTask([1, 2, 3, 4, 5, 6], 2);

// let checkTask = function (arr, n) {
//   let res = [];
//   for (let i of arr) {
//     if (i % n === 0) {
//       res.push(i);
//     }
//   }
//   return res;
// };
// console.log(checkTask([1, 2, 3, 4, 5, 6], 2));

// Задание № 14
// Напишите функцию checkTask(), которая принимает два аргумента x и y.
// Функция должна возвращать массив из чисел в промежутке от x до y.
// Например, если x равен 1, а y равен 5, функция возвратит:
// [1, 2, 3, 4, 5]

// function checkTask(x, y) {
//   arr = [];
//   for (let i = x; i <= y; i++) {
//     arr.push(i)
//   }

//   console.log(arr);
// }
// checkTask(1, 5);

// let checkTask = function (x, y) {
//   arr = [];
//   for (let i = x; i <= y; i++) {
//     arr.push(i);
//   }
//   console.log(arr);
// };
// checkTask(1, 10);

// Задание № 15
// Тимми и Сара думают, что они влюблены, но там, где они живут,
//  они узнают об этом, только когда каждый сорвет по цветку.
//  Если у одного из цветов четное количество лепестков,
//  а у другого нечетное количество лепестков, это означает,
// что они влюблены. Напишите функцию, которая будет принимать количество
// лепестков каждого цветка и возвращать true, если они влюблены, и false, если нет.

// checkTask(9, 9);
// function checkTask(a, b) {
//   if (a % 2 === 0 && b % 2 !== 0) {
//     console.log(true);
//   } else if (a % 2 !== 0 && b % 2 === 0) {
//     console.log(true);
//   } else if (a % 2 !== 0 && b % 2 !== 0) {
//     console.log(false);
//   } else if (a % 2 === 0 && b % 2 === 0) {
//     console.log(false);
//   }
// }

// Задание № 16
// Напишите функцию, чтобы она нашла среднее значение трех
// переданных ей баллов и вернула буквенное значение,
// связанное с этой оценкой.

// 90 <= оценка <= 100 «А»
// 80 <= оценка < 90 «В»
// 70 <= оценка < 80 «С»
// 60 <= оценка < 70 «D»
// 0 <= оценка < 60 «F»

// function checkTask(a, b, c) {
//   let w = (a + b + c) / 3;
//   if (w <= 100 && w >= 90) {
//     console.log("A");
//   } else if (w < 90 && w >= 80) {
//     console.log("B");
//   } else if (w < 80 && w >= 70) {
//     console.log("C");
//   } else if (w < 70 && w >= 60) {
//     console.log("D");
//   } else if (w < 60 && w >= 0) {
//     console.log("F");
//   }
// }
// checkTask(90, 100, 80);

// Задание №1
// Дан массив ["Sultan", "Azamat", "Eldar", "Islam", "Taalai"].
//  Выведите в консоль имена Azamat и Islam с помощью цикла while

// let arr = ["Sultan", "Azamat", "Eldar", "Islam", "Taalai"];
// let i = 0;
// let res = [];

// while (i < arr.length) {
//   if (i % 2 !== 0) {
//     res.push(arr[i]);
//   }
//   i++;
// }
// console.log(res);

// do {
//   if (i % 2 !== 0) {
//     res.push(arr[i]);
//   }
//   i++;
// } while (i < arr.length);
// console.log(res);

// let arr = ["programming", "code", "javascript", "react"];
// let i = 0;
// let res = [];

// while (i < arr.length) {
//   res.push(arr[i][0].toUpperCase() + arr[i].slice(1).toLowerCase());
//   i++;
// }
// console.log(res);

// do {
//   res.push(arr[i][0].toUpperCase() + arr[i].slice(1).toLowerCase());
//   i++;
// } while (i < arr.length);
// console.log(res);

// Задание №2
// Создайте пустой массив и заполните его числами от 1 до 10 с помощью цикла while

// while (i <= 10) {
//     console.log(i);
//     i++
// }

// let i = 1;
// do {
//   console.log(i);
//   i++;
// } while (i <= 10);

// Задание №3
// Выведите в консоль все числа в промежутке с 50 до 99 включительно с помощью цикла.

// let i = 50;
// while (i <= 99) {
//     console.log(i);
//     i++;
// }

// let i = 50;
// do{
//     console.log(i);
//     i++
// }while(i <=99)

// Задание №4
// Выведите те же числа, но уже в обратном порядке, т.е. с 99 до 50.

// let i = 99;
// while (i >= 50) {
//   console.log(i);
//   i--;
// }

// let i = 99;
// do {
//   console.log(i);
//   i--;
// } while (i >= 50);

// Задание №5
// Найдите самый длинный элемент массива и вывкдите в консоль
// ["pen", "pineapple", "apple", "pen"]

// let arr = ["pen", "pineapple", "apple", "pen"];
// let i = 0;
// let maxStr = arr[0];
// while (i < arr.length) {
//   if (maxStr.length < arr[i].length) {
//     maxStr = arr[i];
//   }
//   i++;
// }
// console.log(maxStr);

// let arr = ["pen", "pineapple", "apple", "pen"];
// let i = 0;
// let maxStr = arr[0];

// do {
//   if (maxStr.length < arr[i].length) {
//     maxStr = arr[i];
//   }
//   i++;
// } while (i < arr.length);
// console.log(maxStr);

// Задание №6
// Так же найдите самый короткий элемент этого же массива

// let arr = ["pen", "pineapple", "apple", "pen"];
// let i = 0;
// let short = arr[0];
// while (i < arr.length) {
//   if (short.length > arr[i].length) {
//     short = arr[i];
//   }
//   i++;
// }
// console.log(short);

// let arr = ["pen", "pineapple", "apple", "pen"];
// let i = 0;
// let short = arr[0];

// do {
//   if (short.length > arr[i].length) {
//     short = arr[i];
//   }
//   i++;
// } while (i < arr.length);
// console.log(short);

// Задание №7
// Выведите в консоль все элементы с четными индексами.
// [1,2,3,4,5,6,7,8,9]

// let arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];
// let i = 0;
// while (i < arr.length) {
//   if (i % 2 === 0) {
//     console.log(i);
//   }
//   i++
// }

// let arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];
// let i = 0;
// do {
//   if (i % 2 === 0) {
//     console.log(i);
//   }
//   i++;
// } while (i < arr.length);

// Задание №8
// Дан двумерный массив. Выведите в консоль все элементы.
// [[1,2], [3,4], [5,6]]

// let arr = [
//   [1, 2],
//   [3, 4],
//   [5, 6],
// ];
// let i = 0;

// while (i < arr.length) {
//   let m = 0;
//   while (m < arr[i].length) {
//     console.log(arr[i][m]);
//     m++;
//   }
//   i++;
// }

// Task 1
// Напишите функцию palindrom(word), принимающая один аргумент word.
// Функция, должна выводить в консоль true, если строка является палиндромом,
//  в обратном случае false.
// При этом нужно учитывать пробелы и регистр.
// Палиндром – слово, которое читается одинаково слева направо и справа налево (например, ротор)

// Пример №1:
// Ввод: tenet
// Ответ: true

// Пример №2:
// Ввод: my gym
// Ответ: true

// Пример №3Ж
// Ввод: nolan
// Вывод: false

// function palindrom(word) {
//   return word.split(" ").reverse().join("") === word.split(" ").join("");
// }
// console.log(palindrom("mygym"));

// function palindrom(word) {
//   let newWord = word;
//   return word.split(" ").reverse().
// }
// palindrom("my gym");

//  Task 2
// Напишите функцию для расчета площади и окружности круга по радиусу.
// Ввести радиус:
// Вывести площадь и окружность

// function task(r) {
//   let s = Math.PI * r ** 2;
//   let o = Math.PI * (r * 2);
//   console.log(`плошадь равно ${s} длина округа по радиусу ${o}`);
// }
// task(20);

// Task 3
// Напишите функцию, где пользователь вводит любое целое положительное число.
// А программа суммирует все числа от 1 до введенного пользователем числа.

// function Task(num) {
//   let sum = 0;
//   for (let i = 1; i <= num; i++) {
//     sum += i;
//   }
//   console.log(sum);
// }
// Task(9);

// Task 4
// С помощью цикла написать код который находит наибольший общий
// делитель у двух чисел.
// Пример: для чисел 54 и 24 наибольший общий делитель равен 6.

// function task(a, b) {
//   for () {

//   }
// }
// task(54, 24);

// Task 5
// Создать функцию, которая будет рассчитывать расход топлива автомобиля,
// будет принимать 2 аргумента 1-й сколько всего  километров проехали,
// 2-й сколько понадобилось топлива на это,
// затем функция должна рассчитать сколько ушло .
// топлива на 100 км и вернуть результат вида:
//  'На 100км было расходовано 10 л горючего'

// function checkTask(km, t) {
//   let res =
//   console.log(`На ${km} km было расходовано ${t} л горючего`);
// }
// checkTask(100, 10);

// Task 6
// Создать функцию, которая будет принимать 3 числа в качестве аргументов, функция должна
// возвращать сумму первых двух чисел разделеную на третье число
// (использовать function declaration,а также реализовать проверку на то,
// что третье число не является нулем, если это ноль, то просто
// возвратить результат сложения первого и второго числа)

// function Task(a, b, c) {
//   if (c === 0) {
//     return a + b;
//   } else {
//     return (a + b) / c;
//   }
// }
// console.log(Task(8, 7, 0));

// Task 7

// Создать фуункцию, которая принимает в качестве аргумента массив со строками
//  и в каком регистре нужно вернуть данные,
// строки могут быть записаны в любом регистре, задача: на основе выбора регистра,
// возвращать либо массив со строками в верхнем регистре, либо в нижнем регистре

// let task = function (arr) {
//   let res = [];
//   for (let i of arr) {
//     if (i === i.toUpperCase()) {
//       res.push(i.toLowerCase());
//     } else {
//       res.push(i.toUpperCase());
//     }
//   }
//   console.log(res);
// };
// task(["islam", "azamat"]);

// Task 8
// Ввод: functionLimit(50)
// Вывод:
// 50
// 100
// 200
// 400
// 800
// 800
// 400
// 200
// 100
// 50

// function functionLimit(num) {
//   let newNum = num;
//   while (num < 1000) {
//     console.log(num);
//     num = num * 2;
//   }
//   while (num > newNum) {
//     num = num / 2;
//     console.log(num);
//   }
// }
// functionLimit(50);

// let str = "";
// for (let i = 1; i <=7; i++) {
//   str += '#'
//   console.log(str);
// }

// Пример: допустим в переменной stroka хранится строка "123456".
// Ваш код должен сложить первые три числа 1 + 2 + 3, затем последние три 4 + 5 + 6
// затем, сравнить сумму, 6 === 15 Так как сумма чисел не равна, данное выражение возвращает false.

// Получаем вывод в консоль:

// нет

// function task(num) {
//   let str = num.toString();
//   let res1 = +str[0] * +str[1] * +str[2];
//   let res2 = +str[3] + +str[4] + +str[5];
//   if (res1 === res2) {
//     console.log(true);
//   } else {
//     console.log(false);
//   }
// }
// task(123456);

// / Создать функцию checkTask, которая будет принимать в качестве аргумента 2 строки
// 1-я строка должна быть следующего вида -> '1200m'
// 2-я строка состоит из величины, в которую необходимо преобразовать
// данные -> 'km', 'cm', 'mm',

// function checkTask(str, a) {
//   if (a === "km") {
//     return str / 1000
//   } else if (a === "cm") {
//     return str * 100;
//   } else if (a === "mm") {
//     return m * (100 * 10);
//   }
// }
// console.log(checkTask(1200, "km"));

// Создайте функцию checkTask(arr), принимающую массив и элемент массива, и удаляет переданный элемент из массива.
// Например для аргументов [2, 5, 9, 6] и 5, вывод будет:
// [2, 9, 6]

// function checkTask(arr, b) {
//   let newArr = [];
//   for (let i of arr) {
//     if (i !== b) {
//       newArr.push(i);
//     }
//   }
//   console.log(newArr);
// }
// checkTask([2, 5, 9, 6], 5);

// Создайте переменную number с числовым значением.
// Используя конструкцию if..else, напишите код,
//  который проверяет переменную number на чётность,
//  если число в number чётное, то выведите в консоль:
// Число number четное

// где вместо number должно быть само число.
// Если нечетное:
// Число number нечетное

// здесь, также вместо number должно быть само число.

// function checkTask(number) {
//   if (number % 2 === 0) {
//     console.log(`${number} четное`);
//   } else {
//     console.log(`${number} нечетное`);
//   }
// }
// checkTask(11);

// Создайте 2 массива arr1 и arr2 с числами.
// С помощью цикла for ... of, объедините их вместе и выведите в консоль объединенный массив в одном console.log.
// Если в перемнной arr1 хранится массив [1, 2, 3] а в arr2 [4, 5, 6]
// Вывод должен быть:
// [ 1, 2, 3, 4, 5, 6 ]

// Использовать метод concat - нельзя

// function checkTask(arr1, arr2) {
//   let newArr = [];
//   for (let i of arr1) {
//     newArr.push(i);
//   }
//   for (let m of arr2) {
//     newArr.push(m);
//   }
//   console.log(newArr);
// }
// checkTask([1, 2, 3], [4, 5, 6]);

// Создайте массив arr. Напишите код,
//  который добавляет в конец данного массива первый элемент столько раз,
//  сколько элементов в массиве (длина). Этот массив нужно вывести в console.log
//  Подсказка: нужно использовать цикл for
//  Пример ввода:
//  ['a','b','c']

// Пример вывода:
//  ['a','b','c','a','a','a']

// function task(arr) {
//   let newArr = [...arr];
//   for (let i = 0; i < arr.length; i++) {
//     newArr.push(arr[0]);
//   }
//   console.log(newArr);
// }
// task(["a", "b", "c"]);

// Создайте два массива в переменные arr1 и arr2.
// Создайте новый массив с произведениями каждых соответствующих
// по порядку элементов из двух заданных массивов.
//  Новый массив нужно вывести в console.log.
// К примеру если в arr1:
// [11, 7, 4]

// а в arr2:
// [22, 0, 8]

// Вывод будет :
//  [242, 0, 32]

// так как:
// 11 х 22 = 242
// 7 х 0 = 0
// 4 х 8 = 32

// function checkTask(arr1, arr2) {
//   let newArr = [];
//   newArr.push(arr1[0] * arr2[0]);
//   newArr.push(arr1[1] * arr2[1]);
//   newArr.push(arr1[2] * arr2[2]);
//   console.log(newArr);
// }
// checkTask([11, 7, 4], [22, 0, 8]);

// Запросите у пользователя ввести два числа и верните ему сумму этих двух чисел.
// Если сумма больше 10 и в то же время меньше 20 то, умножьте на 5.
// Если же сумма больше 20 и меньше 50, то разделите на 3.
// Иначе прибавьте 10.
// Для решения используйте функции: prompt и parseInt или опертаор +.
// Ответ может быть и десятичным числом, и выведите это конечное число.
// Например:

// let firstNum = +prompt("Введите первое число");
// let secondNum = +prompt("Введите второе число");
// let res = secondNum + firstNum;
// if (res > 10 && res < 20) {
//   console.log(res * 5);
// } else if (res > 20 && res < 50) {
//   console.log(res / 3);
// } else {
//   console.log(res + 10);
// }

// Дана функция checkTask(arr) которая принимает массив с предложениями.
// Необходимо вернуть новый массив с количеством слов в каждом предложении.

// Пример: ["alice and bob love leetcode", "i joothink so too",
// "this is great thanks very much"]

// function checkTask(arr) {
//   let newArr = [];
//   for (let i of arr) {
//     newArr.push(i.length);
//   }
//   console.log(newArr);
// }
// checkTask([
//   "alice and bob love leetcode",
//   "i think so too",
//   "this is great thanks very much",
// ]);

// Task 1
// Создайте переменную firstNumber и secondNumber,
//задайте им числовые значения и при помощи тернарного оператора сравните числа в переменных,
// если firstNumber больше, чем secondNumber,
// то выведите в консоль фразу:
// firstNumber больше, чем secondNumber
// иначе выведите фразу:
// firstNumber не больше, чем secondNumber
// Например:
// let firstNumber = 5
// let secondNumber = 10
// Вывод:
// '5 больше, чем 10'

// let firstNumber = 5 ;
// let secondNumber = 10;

// firstNumber > secondNumber
//   ? console.log(`${firstNumber} больше, чем ${secondNumber}`)
//   : console.log(`${firstNumber} не больше, чем ${secondNumber}`);

// Task 2
// Создайте переменную number с числовым значением.
// Используя конструкцию if..else, напишите код,
//который проверяет переменную number на чётность,
// если число в number чётное, то выведите в консоль:
// Число number четное
// где вместо number должно быть само число.
// Если нечетное:
// Число number нечетное
// здесь, также вместо number должно быть само число.

// let number = 12;
// if (number % 2 === 0) {
//   console.log(`число ${number} четное`);
// } else {
//   console.log(`число ${number} нечетное`);
// }

// Task 3
// Создайте переменную number с числовым значением.
// Напишите код, который проверяет является ли содержимое number равным 23, и выводит в консоль:
// Верно
// если же number не равен 23 выведите в консоль:
// Неверно

// let number = 12;
// if (number === 23) {
//   console.log("Верно");
// } else {
//   console.log("Неверно");
// }

// Task 4
// Сделайте задание 3 используя условный (тернарный) оператор.
// Проверьте является ли содержимое number равным 23, и выводит в консоль:
// Верно
// если же number не равен 23 выведите в консоль:
// Неверно

// let number = 23;
// number === 23 ? console.log("верно") : console.log("неверно");

// Task 5
// Создайте переменную number с числовым значением.
// Если number больше нуля и меньше 5-ти выведите в консоль:
// Верно
// иначе выведите:
// Неверно

// let number = 34;
// if (number > 0 && number < 5) {
//   console.log("верно");
// } else {
//   console.log("неверно");
// }

// Task 6
// Создайте переменную num и присвойте ей число.
// Нужно посчитать количество цифр в числе num и определить, введенное число:
// однозначное
// двузначное
// Также, нужно определить, что число:
// положительное или отрицательное.
// Результат вывести в консоль в виде строки.
// Например, мы получили число 9, так как наше число
// состоит из одной цифры и больше нуля, то мы должны возвратить строку:
// Число 9 однозначное положительное
// Если же мы получим число -23, то ответ соответственно должен быть:
// Число -23 двузначное отрицательное

// let num = 45;
// num = num.toString();
// for (let i of num) {

// }

// Task 7
// Создайте переменную favDrink, присвойте ей значение в виде строки.
// • Если favDrink равно beer или vodka, нужно вывести в консоль:
// Чрезмерное употребление алкоголя вредит вашему здоровью
// • Если favDrink равно coffee, нужно вывести в консоль:
// Кофеин вреден для сердца
// • Если favDrink равно milk, нужно вывести в консоль:
// Поздравляю! Молоко очень полезное
// • Если favDrink что-то другое, нужно вывести в консоль:
// К сожалению такого напитка нет в списке
// Указания: Задание необходимо выполнить с помощью конструкции switch. Вывести всё в консоль.

// let favDrink = "vodka";
// if (favDrink === "beer" || favDrink === "vodka") {
//   console.log("Чрезмерное употребление алкоголя вредит вашему здоровью");
// } else if (favDrink === "coffee") {
//   console.log("Кофеин вреден для сердца");
// } else if (favDrink === "milk") {
//   console.log(" Поздравляю! Молоко очень полезное");
// } else {
//   console.log("К сожалению такого напитка нет в списке");
// }

// Task 8
// Создайте переменную stroka, присвойте ей строку или число, например:
// "987456"
// или:
// 987456
// Проверьте, что сумма первых трех цифр равняется сумме вторых трех цифр.
// Если это так, выведите в консоль:
// да
// в противном случае выведите:
// нет
// Пример: допустим в переменной stroka хранится строка "123456".
// Ваш код должен сложить первые три числа , затем последние три
// затем, сравнить сумму,
// Так как сумма чисел не равна, данное выражение возвращает false.
// Получаем вывод в консоль:
// нет

// function task(stroka) {
//   let res1 = +stroka[0] + +stroka[1] + +stroka[2];
//   let res2 = +stroka[3] + +stroka[4] + +stroka[5];
//   if (res1 === res2) {
//     console.log("ДА");
//   } else {
//     console.log("НЕТ");
//   }
// }
// task("987456");

// Task 9
// создайте переменную num1 и num2, присвойте переменным числа.
// Если num1 равно или меньше 1, а num2 больше или равно 3, то выведите в консоль:
// Верно
// иначе выведите в консоль:
// Неверно

// let num1 = 1;
// let num2 = 7;
// if (num1 <= 1 || num2 >= 3) {
//   console.log("Верно");
// } else {
//   console.log("Неверно");
// }

// let num1 = 1;
// let num2 = 7;
// num1 <= 1 || num2 >= 3 ? console.log("Верно") : console.log("Неверно");

// Task 10
// Создайте переменные userName и password.
// Проверьте хранится ли в переменной  значение , а в переменной  значение 777.
// Если значения верные, вывести в консоль:
// Добро пожаловать
// в противном случае:
// Пользователь не найден

// Task 11
// Создайте переменные firstNum, secondNum, thirdNum и присвойте им числовые значения.
// Выведите в консоль число с наибольшим значением.
// Например: если в firstNum будет хранится число 5, в secondNum 3, а в thirdNum 16,
//то вывод в консоль должен быть:
// Максимальное число 16
// Учтите возможность равенства всех трех чисел.

// function task(firstNum, secondNum, thirdNum) {
// let res =
// }
// task(5, 3, 16);

// Task 12
// Создайте переменную num и присвойте ей числовое
// значение если число положительное или равно 0,
// выведите в консоль сообщение "Положительное" если число отрицательное,
// выведите в консоль сообщение "Отрицательное"

// Task 13
// Создайте массив arr, который содержит числовые значения.
// Добавьте этому массиву, в начало, элементы: . Вывести результат в консоль.
// К примеру, если в перемнной arr хранится массив: [1,2,3]
// То в выводе получим:
// [4,5,6,1,2,3]

// Task 14
// Создайте массив arr, принимающий в себя данные: ['js', 'css', 'jq'].
// Выведите на экран первый элемент при помощи метода массива:
// js

// Task 15
// Создайте массив переменную arr, в которой хранится данный массив - ['js', 'css', 'jq'] .
// Выведите на экран последний элемент при помощи метода массива.
// Вывод будет:
// jq

// Task 16
// Создйте переменную arr, в которой хранится массив [5, 2, 4, 2, 7] . С помощью метода slice, запишите в новую переменную первые 3 элемента из массива arr.
// Вывести результат в консоль.
// Вывод будет:
// [5, 2, 4]

// Task 17
// Создайте переменную arr, в которой хранится массив:
// [3, 4, 1, 2, 7]
// Отсортируйте массив по возрастанию при помощи метода массива.
// Вывести результат в консоль.
// Вывод в консоль должен быть:
// [1, 2, 3, 4, 7]

// Task 18
// Создайте массив arr и присвойте ей числовое значение.
// С помощью метода splice запишите в новый массив элементы, под первым, вторым и третьим индексом в массиве.
// Вывести результат в консоль.
// К примеру если в arr: [1, 2, 3, 4, 5], то в новом массиве будут элементы:
// [2, 3, 4]

// Task 19
// Создайте массив в переменную arr, отсортируйте данный массив по убыванию.
// Вывести результат в консоль.
// Если в arr передали массив - [5, 2, 1, -10, 8]
// то вывод должен быть:
// [8, 5, 2, 1, -10]

// Task 20
// Создайте массив из чисел arr. Вывести в консоль наибольшее число из массива.
// К примеру, если в arr попадет массив [0, -11, 121, 3, 18]
// Вывод должен быть:
// 121

// let arr = [0, -11, 121, 3, 18];
// let maxSum = 0;

// for (let i of arr) {
//   if (maxSum < i) {
//     maxSum = i;
// }
// }
// console.log(maxSum);

// Task 21
// Создайте переменную arr, в которой хранится массив вида:
// ["Life", "is", "hard"]
// С помощью метода splice замените слово  на .
// Вывести результат в консоль.
// Результат должен быть:
// ["Life", "is", "good"]

// Task 22
// Создайте массив arr. Переверните массив и выведите его в консоли.
// К примеру если в arr у нас такой массив: [1,2,3,4]
// то вывод будет таким:
// [4,3,2,1]
// Используйте метод reverse

// Task 23
// Создайте переменную arr, в которой хранится массив вида:
// ["один","два","три","четыре"]
// Используя методы splice и push, напишите код, который переставляет первый элемент массива в конец исходного массива.
// Вывести результат в консоль.
// Пример ввода:
// ["один","два","три","четыре"]
// Пример вывода:

// ["два","три","четыре","один"]

// Task 24
// Создайте переменную arr, в которой хранится массив вида:
// ["один","два","три","четыре"]
// Используя метод join, напишите код, который объединяет все элементы массива в строку. Между словами должен быть знак +.
// Вывести результат в консоль.
// Пример ввода:
// ["один","два","три","четыре"]
// Пример вывода:

// "один+два+три+четыре"

// Task 25
// Создайте переменную arr, в которой хранится массив вида:
// [11, 4, 6]
// Используя метод , от первого элемента массива отнимите второй, результат занесите в конец исходного массива.
// Вывести результат в консоль.
// Пример ввода:
// Пример вывода:

// [11, 4, 6, 7]

// let arr = [11, 4, 6];
// if ((res = arr[0] - arr[1])) {
//   arr.push(res);
// }
// console.log(arr);

// Task 26
// Создайте 2 массива arr1, arr2. Объедините их вместе. Выведите объедененный массив в консоль.
// Например:
// Вывод:

// [1,2,3,4,5,6]

// let arr1 = [1, 2, 3];
// let arr2 = [4, 5, 6];
// let newArr = [];
// newArr.push(arr1);
// newArr.push(arr2);
// console.log(newArr.flat());

// Task 27
// Создайте массив arr. Выведите в консоль массив, где элементы в обратном порядке
// Например:
// Вывод:

// [3,2,1]

// let arr = [1, 2, 3];
// arr.reverse();
// console.log(arr);

// Task 28
// Создайте массив arr. Добавьте ему в конец элементы 4, 5, 6.
// Выведите в консоль измененный массив
// Например:
// let arr = [1,2,3]
// Вывод:

// [1,2,3,4,5,6]

// let arr = [1, 2, 3];
// arr.push(4, 5, 6);
// console.log(arr);

// Task 29
// Создайте массив arr. Удалите первый элемент и выведите его в консоль.
// Например:
// let arr = [1,2,3]
// Вывод:
// 1

// let arr = [1, 2, 3];
// console.log(arr.shift());

// Task 30
// Создайте массив arr. Удалите последний элемент и выведите его в консоль.
// Например:
// let arr = [1,2,3]
// Вывод:

// let arr = [1, 2, 3, 4, [5, 5, 5]];

// let checkTask = (arr) => {
//   arr = arr.flat();
//   let sum = [];
//   for (let i = 4; i < arr.lenght; i++) {
//     sum.push(arr[i]);
//     console.log(sum);
//   }
// };

// checkTask([1, 2, 3, 4, [5, 5, 5]]);

// let task = (arr) => {
//   arr = arr.flat();
//   let result = [];
//   for (let i of arr) {
//     result.push(i.length);
//   }
//   console.log(result);
// };
// task(["asdfg", "dfght", "fghj", ["fgh", "fghj", "fghj"]]);

// Task 1
// Перепишите данную функцию в стрелочную функцию:

// function checkTask() {
// console.log("Hello World!");
// }

// Task 2
// Напишите стрелочную функцию checkTask(),
// у которой есть параметры age(возраст, число) и name(имя, строка).
// Функция должна выводить поздравление для указанного имени и возраста,
// в виде такой строки:
// Happy Birthday 'name'! You are 'age'!
// К примеру, если в аргументы передали  и , функция должна вывести строку:
// Happy Birthday Mike! You are 23!

// Task 3
// Напишите стрелочную функцию checkTask(),
//которая принимает в аргументы массив со строками.
// Добавьте к концу каждой строки массива строку .
// Выведите массив в консоль.
// К примеру при передачи в аргументы данного массива , вывод будет:
// ['John is cool', 'Mike is cool', 'Rick is cool', 'Drake is cool']

// Task 4
// Напишите стрелочную функцию checkTask(),
//принимающую в качестве аргумента строку.
// Функция должна переворачивать строку и выводить ее в консоль.
// Например, строку , функция выведет как:
// tpircSavaJ

// Task 5
// Напишите стрелочную функцию checkTask(),
//принимающую в качестве аргументов, строку и символ.
// Функция должна выводить в консоль количество символов в строке.
// Например, если мы передаем функции  и , то должны получить:
// 2
// в строке "JavaScript" две буквы "a"

// Task 6
// Создайте стрелочную функцию checkTask() которая принимает один аргумент.
// Если в аргумент передали строку , функция вернет:
// "Hello User"
// иначе вернет:

// "Error"

// Напишите стрелочную функцию getAge, которая будет вычислять возраст.
// Первым параметром функция принимает имя, а вторым - год рождения.
//  Функция возвращает строку в таком формате "(имя): (возраст)".Например:

// let getAge = (name, age) => {
//   let res = 2023 - age;
//   return `NAME: ${name} ,${age} AGE :${res}`;
// };
// console.log(getAge("Санжар", 2002));

// Напишите стрелочную функцию average которая
// находит среднее арифметическое его аргументов
// (сумма элементов, делить на количество)
// (она может принимать сколько угодно параметров)Например:

// let average = (arr) => {
//   let sum = 0;
//   for (let i of arr) {
//     sum += i;
//   }
//   return sum / arr.length;
// };
// console.log(average([1, 2, 3, 4, 5, 6, 7]));

// Напишите стрелочную функцию cube,
// которая возвращает куб числа. Число передается параметром.Например:

// let cube = (num) => {
//   return num ** 3;
// };
// console.log(cube(3));

// Напишите стрелочную функцию checkSum, которая параметрами принимает 2 числа.
//  Если их сумма больше 10 - пусть функция вернет true, а если нет - false.

// let checkSum = (sum1, sum2) => {
//   let res = sum1 + sum2;
//   if (res > 10) {
//     return true;
//   } else {
//     return false;
//   }
// };
// console.log(checkSum(5, 5));

// Напишите стрелочную функцию reverseArray,
//  которая принимает массив с числами. Не используя метода
//  reverse переверните его элементы в обратном порядке.Например:

// let reverseArray = (arr) => {
//   let res = [];
//   for (let i of arr) {
//     res.unshift(i);
//   }
//   return res;
// };
// console.log(reverseArray([1, 2, 3, 5, 10]));

// Напишите стрелочную функцию arrayFill,
// которая будет заполнять массив заданными значениями.
//  Первым параметром функция принимает значение,
//   которым заполнять массив, а вторым - сколько элементов должно быть в массиве.Например:

// Вывод:
// ['x', 'x', 'x', 'x', 'x']

// let arrayFill = (a, b) => {
//   let newArr = [];
//   for (let i = 1; i <=b; i++) {
//     newArr.push(a);
//   }
//   return newArr;
// };
// console.log(arrayFill("x", 5));

// Напишите стрелочную функцию getDigitsSum,
// которая принимает число и возвращает сумму всех цифр числаНапример:

// let getDigitsSum = (num) => {
//   let sum = 0;
//   for (let i = 1; i <= num; i++) {
//     sum += i;
//   }
//   return sum;
// };
// console.log(getDigitsSum(82));

// let arr = ["AZAMAT"];
// let res = arr.join("").split("").reverse().join("");
// console.log(res);

// let str = ["azamat"];
// str.splise()

// Создайте массив из чисел arr.
// С помощью цикла for ... of и оператора if посчитайте
//  сумму чётных элементов массива и выведите результат в консоль.
// Например, если к переменной arr присвоено данное значение: [2, 5, 9, 15, 0, 4]
// Вывод должен быть:
// 6

// т.к. 6 = 2 + 0 + 4

// let arr = [2, 5, 9, 15, 0, 4];
// let sum = 0;
// for (let i of arr) {
//   if (i % 2 === 0) {
//     sum += i;
//   }
// }
// console.log(sum);

// Создать функцию checkTask, которая в качестве аргумента
//  будет принимать массив со строками и числами, задача,
//  отсортировать числа в отдельный массив,
//  а строки в отдельный и вернуть оба массиваНапример:
// let res = checkTask([1,'hello', 2, 3, 'world'])console.log(res)

// Вывод:
// [[1,2,3],['hello','world']]

// function checkTask(arr) {
//   let res = [];
//   let result = [];
//   let res2 = [];
//   for (let i of arr) {
//     if (typeof i === "number") {
//       res.push(i);
//     } else if (typeof i === "string") {
//       res2.push(i);
//     }
//   }
//   result.push(res,res2);
//   console.log(result);
// }
// checkTask([1, "hello", 2, 3, "world"]);

// Напишите стрелочную функцию alphabetOrder,
// которая возвращает переданную строку с буквами
// в алфавитном порядке.Предположим,
//  что символы пунктуации и цифры не включены в переданную строку.Например:

// Вывод:
// 'aaabcehillpt'

// let alphabetOrder = (str) => {
//   return str.split("").sort().join("");
// };
// console.log(alphabetOrder("alphabetical"));

// Напишите стрелочную функцию getDigitsSum,
// которая переворачивает число.Например:
// console.log(getDigitsSum(1234))

// Вывод:
// 4321

// let getDigitsSum = (num) => {
//   return +num.toString().split("").reverse().join("");
// };
// console.log(getDigitsSum(1234));

// Переменным price(цена) и discount(скидка) присвойте числовые значения.
//  Высчитайте итоговую цену с учетом скидки и выведите результат в консоль.
// Используйте console.log в коде - единожды, только для вывода цены со скидкой.
// К примеру вы получили цену 600 и скидку 15. Вывод в консоль должен быть:
//  510

// let price = 600;
// let discount = 15;

// console.log(price - (price * discount) / 100);

// let arr = [1, 5, -6, 6, 224, -65, 72.7];
// let res = arr.filter((el) => el > 0);
// console.log(res);

// let arr = [
//   {
//     id1: 24,
//     id2: 40,
//     id3: 12,
//   },
// ];

// let sum = arr.map((el) => el.id1 + el.id2 + el.id3);

// console.log(sum);

// for (let i of arr) {
//   console.log(i.id1 + i.id2 + i.id3);
// }

// TODO Используйте метод .map() для массива героев,
// чтобы вернуть новый массив. Новый массив должен
// переименовать ключ «name» в «hero». Ключ «name»
// не должен появляться в новом массиве.
// В новый массив должен быть добавлен новый ключ с именем (id).
// Ключ 'id' должен основываться на индексе.

// const heros = [
//   { name: "Spider-Man" },
//   { name: "Thor" },
//   { name: "Black Panther" },
//   { name: "Captain Marvel" },
//   { name: "Silver Surfer" },
// ];

//! OUTPUT

// [
//   { id: 0, hero: "Spider-Man" },
//   { id: 1, hero: "Thor" },
//   { id: 2, hero: "Black Panther" },
//   { id: 3, hero: "Captain Marvel" },
//   { id: 4, hero: "Silver Surfer" },
// ];

// let heros = [
//   { name: "Spider-Man" },
//   { name: "Thor" },
//   { name: "Black Panther" },
//   { name: "Captain Marvel" },
//   { name: "Silver Surfer" },
// ];

// let result = heros.map((el, index) => {
//   return {
//     id: index,
//     hero: el.name,
//   };
// });
// console.log(result);

// Вам дана функция checkTask, принимающая массив arr с числами,
//  выведите в консоль массив, в котором будут только положительные числа из массива arr.
// Например:
// checkTask([2, 3, 5, 9, 8, -11, 6, 7, 47, 53, -1, -3, 17])

// Вывод:
//  [2, 3, 5, 9, 8, 6, 7, 47, 53, 17]
// Используйте метод filter()

// function checkTask(arr) {
//   let res = arr.filter((el) => el > 0);
//   console.log(res);
// }
// checkTask([2, 3, 5, 9, 8, -11, 6, 7, 47, 53, -1, -3, 17]);

// Вам дана функция checkTask, принимающая массив arr с числами.
//  Используя метод forEach() найдите сумму элементов массива.
// Например:
// checkTask([10, 25, 25, 15, 5, 10])

// Вывод:
// 90

// function checkTask(arr) {
//   let sum = 0;
//   arr.forEach((el) => {
//     sum += el;
//   });
//   console.log(sum);
// }
// checkTask([10, 25, 25, 15, 5, 10]);

// Вам дана функция checkTask, принимающая массив arr с числами.
// Используя метод reduce(), вычтите числа в массиве начиная с
//  начала и выведите в консоль результат.
// Например:
// checkTask( [175, 50, 25])

// Вывод:
// 100

// т.к 175-50-25=100

// Напишите функцию checkTask(arr),
//  которая принимает в аргументы массив и возвращает элемент массива с максимальным значением.
// К примеру, для массива:
// [4, 15, -4, 27, 12, 8];

// Возвращенным значением будет:
// 27

// Нельзя использовать sort()!

// function checkTask(arr) {
//   let sum = 0;
//   let maxSum = arr.reduce((acc, el) => (acc > el ? acc : el));
//   console.log(maxSum);
// }
// checkTask([4, 15, -4, 27, 12, 8]);

// Данa функция checkTask(arr), принимающая в аргументы массив с числами.
// Используя forEach() и push(), создайте новый массив, состоящий из квадратов этих чисел.
// Результат возвратите из функции.
// Например, для массива:
// [1, 2, 3]

// Возвращенным значением будет:
// [1, 4, 9]

// Напишите функцию checkTask(arr), принимающую в аргументы массив со строками.
// Используя метод filter(), оставьте в массиве только те строки,
//  длина которых больше пяти символов.
// Результат выведите в консоль.
// Например, для массива:
// ['июнь', 'октябрь', 'май', 'ноябрь', 'март']

// Вывод будет:
// ['октябрь','ноябрь']

// function checkTask(arr) {
//   let res = arr.filter((el) => el.length > 5);
//   console.log(res);
// }
// checkTask(["июнь", "октябрь", "май", "ноябрь", "март"]);

// Напишите функцию checkTask(arr), принимающую в аргументы массив с числами.
// Используя метод reduce(), найдите сумму всех элементов до первого нуля.
// Результат выведите в консоль.
// Например, для массива:
// [1, 2, 3, 0, 4, 5, 6]

// function checkTask(arr) {
//   let sum = 0;
//   let newArr = arr.reduce((acc, el) => {
//     if (el === 0) {
//       return (sum = acc);
//     } else {
//       return sum + el;
//     }
//   });
//   console.log(newArr);
// }
// checkTask([1, 2, 3, 0, 4, 5, 6]);

// суммируем первые 3 элемента, так как дальше стоит элемент с числом 0.
// Вывод будет:
// 6

// let arr = [
//   { name: "Azamat", age: 20, price: 2000 },
//   { name: "Sultan", age: 22, price: 1000 },
//   { name: "Taalai", age: 10, price: 2500 },
//   { name: "Eldar", age: 30, price: 4000 },
//   { name: "Emir", age: 70, price: 3000 },
// ];

// let res = arr.map((el) => {
//   return el.age;
// });
// let sum = res.reduce((acc, el) => acc + el);
// console.log(sum / 5);

// Task 1
// Напишите функцию checkTask(arr), принимающую в аргументы массив состоящий из других массивов.
// Используя метод reduce(), найдите сумму всех элементов.
// Результат выведите в консоль.
// Например, для массива:
// [1,2, [4,5,6], [7,8]]
// Вывод будет:
// 33

// function checkTask(arr) {
//   let newArr = arr.flat();
//   let sum = newArr.reduce((acc, el) => acc + el);
//   return sum;
// }
// console.log(checkTask([1, 2, [4, 5, 6], [7, 8]]));

// Task 2
// Напишите функцию checkTask(arr), которая получает в качестве параметра массив.
// Функция должна перебрать все его элементы и вывести сам элемент,
//  а также тип данных элемента - числовой, либо не числовой.
// К примеру, для массива:
// ['Молоко', -77, 11, 'Мед', -88]
// Вывод будет следующим:
// Молоко - не число
// -77 - число
// 11 - число
// Мед - не число
// -88 - число

// let checkTask = function (arr) {
//   let newArr = arr.map((el) => {
//     if (typeof el === "number") {
//       return "число";
//     } else {
//       return "не число";
//     }
//   });
//   console.log(newArr);
// };
// checkTask(["Молоко", -77, 11, "Мед", -88]);

// Task 3
// Напишите функцию checkTask(arr), которая будет принимать массив из чисел.
// Ваша функция должна находить сумму чисел методом forEach(), методом reduce() и map().
// Для массива [5, 6, 7, 8, 9] вывод будет:
// forEach: 35
// reduce: 35
// map: 35

// FOREACH

// function checkTask(arr) {
//   let sum = 0;
//   arr.forEach((el) => {
//     sum += el;
//   });
//   console.log(sum);
// }
// checkTask([5, 6, 7, 8, 9]);

//REDUCE

// function checkTask(arr) {
//   let sum = arr.reduce((acc, el) => acc + el);
//   console.log(sum);
// }
// checkTask([5, 6, 7, 8, 9]);

//MAP

// function checkTask(arr) {

//   let newArr = arr.map((el) => );
//   console.log(newArr);
// }
// checkTask([5, 6, 7, 8, 9]);

// Task 4
// Создайте функцию checkTask(arr), принимающую массив, состоящий из строк.
// Функция должна возвращать массив, содержащий только те строки,
//  длина которых равна или больше пяти символов.
// Для массива:
// ['aaa', 'aaaqqq', 'zzzqq', 'zz', 'qsaa', 'q', 'az']
// Вывод будет:
// ['aaaqqq', 'zzzqq']
// Используйте filter()

// function checkTask(arr) {
//   let newArr = arr.filter((el) => (el.length >= 5 ? el : false));
//   console.log(newArr);
// }
// checkTask(["aaa", "aaaqqq", "zzzqq", "zz", "qsaa", "q", "az"]);

// Task 5
// Создайте функцию checkTask(arr), принимающую массив,
//  в нем могут быть обычные элементы и подмассивы.
// Функция должна возвращать массив, содержащий только подмассивы.
// Для массива:
// [1, 2, [3, 4], 5,[6, 7]]
// Вывод будет:
// [[3, 4],[6, 7]]

// Используйте метод filter()

// function checkTask(arr) {
//   let newArr = arr.filter((el) => {
//     if (typeof el !== 'number') {
//       return el;
//     }
//   });
//   console.log(newArr);
// }

// checkTask([1, 2, [3, 4], 5, [6, 7]]);

// function checkTask(arr){

// }

// checkTask([1, 2, [3, 4], 5, [6, 7]])

// Task 6
// Создайте функцию checkTask(arr), принимающую массив и элемент массива, и удаляет переданный элемент из массива.
// Например для аргументов [2, 5, 9, 6] и 5, вывод будет:

// [2, 9, 6]

// function checkTask(arr) {
//   let res = arr.filter((el) => (el !== 5 ? el : NaN));
//   console.log(res);
// }
// checkTask([2, 5, 9, 6]);

// Task 7
// Создайте функцию checkTask(arr), которая принимает в аргументы массив с числами.
// Функция должна вычислять сколько элементов с начала массива надо сложить, чтобы в сумме получилось 10.
// Для массива:
// [3, 1, 4, 2, 4, 5, 6]
// Функция должна возвратить:
// 4

// acc + el === 10 ? sum++ : false;

// function checkTask(arr) {
//   let sum = 0;
//   let newArr = arr.reduce((acc, el) => {
//     if (acc === 10) {
//       return acc;
//     } else {
//       sum++;
//       return acc + el;
//     }
//   }, 0);
//   console.log(sum);
// }
// checkTask([3, 1, 4, 2, 4, 5, 6]);

//  Вам дано число n=1000. Делите его на 2 столько раз,
//  пока результат деления не станет меньше 50. Какое число получится?
//  Посчитайте количество итераций, необходимых для этого (итерация - это проход цикла),
//  и запишите его в переменную num.

// let n = 1000;
// let sum = 0;
// while (n > 50) {
//   n = n / 2;
//   sum++;
// }
// console.log(sum);

// Есть массив с числами let arr = [1, 2, -3, 0, 1, -6, 9, 0, 0].
// Составьте программу, которая определяет кол-во отрицательных,
// кол-во положительных и кол-во нулей в массиве.

// let arr = [1, 2, -3, 0, 1, -6, 9, 0, 0];
// let sum = 0;
// let sum1 = 0;
// let sum2 = 0;

// let newArr = arr.filter((el) => {
//   if (el >0) {
//     return sum++;
//   } else if (el === 0) {
//     return sum1++;
//   } else if (el < 0) {
//     return sum2++;
//   }
// });
// console.log(sum, sum1, sum2);

// Нам дана функция checkTask(arr) которая принимает
// массив с объектами с ключами name.
// Нужно перебрать этот массив так,
// чтобы функция нам вернула просто массив с именами в виде строк.

// Пример: Дан массив:

// [
//   {
//     name: 'Sultan',
//   },
//   {
//     name: 'Begimay',
//   },
//   {
//     name: 'Taalai',
//   },
//   {
//     name: 'Eldar',
//   },
// ];

// Результат: ["Sultan", 'Begimay', 'Taalai', 'Eldar'];

// function checkTask(arr) {
//   let newArr = arr.map((el) => el.name);
//   console.log(newArr);
// }
// checkTask([
//   {
//     name: "Sultan",
//   },
//   {
//     name: "Begimay",
//   },
//   {
//     name: "Taalai",
//   },
//   {
//     name: "Eldar",
//   },
// ]);

// let arr = ["Kim", "Kortney", "Khole", "Kendall", "Kayli"];

// let res = arr.filter((el) => {
//   return /a/.test(el);
// });
// console.log(res);

// TODO 1
// Создайте функцию, которая принимает число и возвращает
// его противоположное значение. Пример: input: 20, output: -20.

// function checkTask(num) {
//   return `input ${num} output ${-num}`;
// }
// console.log(checkTask(-20));

// TODO 2
// Напишите функцию checkTask(), которая принимает целое
// число и возвращает сумму всех его цифр.
// Например, для числа 456, функция должна вернуть:
// 15
// так как 4 + 5 + 6 = 15

// function checkTask(num) {
//   let res = num.toString().split("");
//   let sum = 0;
//   for (let i of res) {
//     sum += +i;
//   }
//   return sum;
// }
// console.log(checkTask(456));

// function checkTask(num) {
//   let res = num.toString().split("");
//   let newArr = res.reduce((acc, el) => +acc + +el);
//   console.log(newArr);
// }
// checkTask(456);

// TODO 3
// Напишите стрелочную функцию, которая принимает в качестве
// параметра километры и возвращает метры. Функцию с начала
// напишите в несколько строк (тело функции в фигурных скобках.
// Затем, функцию сократите до одной строки.

// let task = (km) => `${km * 1000} метр`;
// console.log(task(5));

// TODO 4
// Напишите функцию, которая принимает строку из нескольких
// слов и возвращает самое длинное слово.
// Например: "js css html"

// function checkTask(str) {
//   let arr = str.split(" ");
//   let newArr = arr.reduce((acc, el) => (acc.length > el.length ? acc : el));
//   console.log(newArr);
// }
// checkTask("js css html");

// function checkTask(str) {
//   let maxStr = "";
//   maxStr > str.length ? console.log(maxStr) : console.log(maxStr);
// }
// checkTask("js css html");

// TODO 5
// Напишите функцию, которая принимает строку, и возвразает
// ее в перевернутом виде. Например: "JavaScript-11".

// function checkTask(str) {
//   let res = str.split("");
//   let newArr = res.map((el) => el);
//   return newArr.reverse().join("");
// }
// console.log(checkTask("JavaScript-11"));

// function task(str) {
//   let res = str.split("").reverse().join("");
//   console.log(res);
// }
// task("JavaScript-11");

// TODO 6
//  Запишите функцию квадратной суммы, чтобы она возводила в квадрат
// каждое переданное ей число, а затем суммировала результаты.
// Например, для [1, 2, 2] он должен вернуть 9, потому что 1^2 + 2^2 + 2^2 = 9.

// function checkTask(arr) {
//   let sum = 0;
//   for (let i of arr) {
//     sum += i ** 2;
//   }
//   return sum;
// }
// console.log(checkTask([1, 2, 2]));

// function checkTask(arr) {
//   let sum = 0;
//   let newArr = arr.map((el) => {
//     sum += el ** 2
//   });
//   console.log(sum);
// }
// checkTask([1, 2, 2]);

// TODO 7
// Создайте функцию avg() , которая будет находить среднее значение
// по всем своим аргументам.

// function task(a, v, g) {
//   let res = (a + v + g) / 3;
//   console.log(res);
// }
// task(10, 10, 10);

// function checkTask(avg) {
//   let total = 0;
//   for (let i of avg) {
//     total += i;
//   }
//   console.log(total / avg.length);
// }
// checkTask([10, 30, 60]);

// TODO 8
// Напишите функцию pow(x,n) которая возвращает x в степени n.
// Другими словами умножьте x на себя n раз.

// function pow(x, n) {
//   let sum = (x ** n);
//   return sum;
// }
// console.log(pow(4, 5));

// TODO 9
// Напишите программу на JavaScript для вычисления суммы двух заданных
// целых чисел. Если два значения одинаковы, то возвращается тройная их сумма.

// function task(a, b) {
//   return a === b ? (a + b) * 3 : a + b;
// }
// console.log(task(2, 2));

// TODO 10
// Дан массив с элементами [2, 3, 4, 5, 17, 8, 9, 1]. С помощью цикла for найдите
// произведение элементов этого массива, также обработать вариант того, что
// в массиве может быть 0, если он есть нужно остановить цикл и просто
// отобразить 0, так как любое число умноженное на 0 выдаст 0.

// function task(arr) {
//   let sum = 1;
//   for (let i of arr) {
//     sum *= i;
//   }
//   return sum;
// }
// console.log(task([2, 3, 4, 5, 17, 8, 9, 1]));

// TODO 11
// Дан массив следущего вида: [
// {title: 'Post 1', author: 'User 1', likes: 549},
// {title: 'Post 2', author: 'User 1', likes: 67},
// {title: 'Post 3', author: 'User 3', likes: 345},
// {title: 'Post 4', author: 'User 6', likes: 1023},
// {title: 'Post 5', author: 'User 2', likes: 150},
// ],
// задача: вернуть массив, в котором будут только названия 3х самых популярных
// постов(ориентироваться на лайки)(использовать метод sort())

// let arr = [
//   { title: "Post 1", author: "User 1", likes: 549 },
//   { title: "Post 2", author: "User 1", likes: 67 },
//   { title: "Post 3", author: "User 3", likes: 345 },
//   { title: "Post 4", author: "User 6", likes: 1023 },
//   { title: "Post 5", author: "User 2", likes: 150 },
// ];

// let newArr = arr.map((el) => {
//   return el.likes;
// });
// let result = newArr.sort((a, b) => b - a);
// let fav = [];
// for (let i = 0; i < 3; i++) {}

// TODO 12
// Дан массив [true, 7, 2, 'Hello']. Найдите сумму чисел в массиве
// (только элементов с числовым типом данных).

// Good luck.

// let arr = [true, 7, 2, "Hello"];
// let sum = 0;
// for (let i of arr) {
//   if (typeof i === "number") {
//     sum += i;
//   }
// }
// console.log(sum);

// function task(arr) {
//   let sum = 0;
//   let newArr = arr.filter((el) =>
//     typeof el === "number" ? (sum += el) : false
//   );
//   return sum;
// }
// console.log(task([true, 7, 2, "Hello"]));

// Дан массив [1, 2, 3, 4, 5]. С помощью метода splice преобразуйте массив в [1, 4, 5].  (метод splice)

// let arr = [1,2,3,4,5]
// arr.splice(1,2)
// console.log(arr);

// 3. Дан массив [1, 2, 3]. Добавьте ему в конец элементы 4, 5, 6. (методы push, unshift)

// let arr = [1, 2, 3];
// arr.push(4, 5, 6);
// console.log(arr);

// Выведите в консоль все элементы с четными индексами.
// let arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];
// for (let i of arr) {
//     if(i%2===0){
//         console.log(i);
//     }
// }

// Дан двумерный массив. Выведите в консоль все элементы.

// let arr = [
//   [1, 2],
//   [3, 4],
//   [5, 6],
// ];
// console.log(arr.flat());

// Создайте пустой массив и заполните его числами от 1 до 10 с помощью цикла for

// let arr = [];
// for (let i = 1; i <= 10; i++) {
//   arr.push(i);
// }
// console.log(arr);

// Найдите самый длинный элемент массива и вывкдите в консоль

// let arr = ["pen", "pineapple", "apple", "pen"];
// let maxStr = arr[0];
// for (let i of arr) {
//   if (maxStr.length < i.length) {
//     maxStr = i;
//   }
// }
// console.log(maxStr);

// Дан массив ["Polina", "Mirdin", "Azret", "Aliia", "Aidana"].
// Выведите в консоль имена Mirdin и Aliia с помощью цикла for

// function checkTask(arr) {
//     arr.filter((el)=> {

//     })
// }
// checkTask(["Polina", "Mirdin", "Azret", "Aliia", "Aidana"]);

// Дана строка: 'Hello, I\'m Jack. I\'m 25 years old and I Frontend developer!', вывести в консоль символы у которых четный

// let str = "Hello, I'm Jack. I'm 25 years old and I Frontend developer!";
// for (let i of str) {
//   if (str[i] % 2 === 0) {
//     console.log(str[0]);
//   }
// }

//, задача: вывести в консоль только те имена, длинна которых больше 4-х символов

// const names = [
//   [
//     ["Helen", "Tom"],
//     ["Jack", "Peter"],
//   ],
//   [
//     ["Jessica", "Bob"],
//     ["Jimm", "John"],
//   ],
//   [
//     ["Alexa", "Jessy"],
//     ["David", "Paul"],
//   ],
// ];

// for (let i of names) {
//   for (let m of i) {
//     if (m.length > 4) {
//       console.log(names[i]);
//     }
//   }
// }

// Задание №1
// Создайте объект в переменной programmer. Дайте объекту имя,
// фамилию, возраст, язык программирования и зарплату. Выведите каждое свойство объекта по очереди в консоль.

// ПИСАТЬ КОД ЗДЕСЬ

// const programmer = {
//   name: "Azamat ",
//   last_name: "Belekov",
//   age: 17,
//   language: "JS",
//   salary: 15000,
// };
// console.log(Object(programmer));

// console.log(programmer.name);
// console.log(programmer.last_name);
// console.log(programmer.age);
// console.log(programmer.language);
// console.log(programmer.salary);

// Задание №2
// Запросите у пользователя ввести два числа и верните ему сумму этих двух чисел.
// Если сумма больше 10 и в то же время меньше 20 то, умножьте на 5. Если же сумма больше 20 и меньше 50, то разделите на 3.
// Иначе прибавьте 10.
// Для решения используйте функции: prompt и опертаор +.
// Ответ может быть и десятичным числом, и выведите это конечное число.

// ПИСАТЬ КОД ЗДЕСЬ

// let firstNum = +prompt("Введите первое число");
// let secondNum = +prompt("Введите второе число");

// let sum = firstNum + secondNum;
// if (sum > 10 && sum < 20) {
//   console.log(sum * 5);
// } else if (sum > 20 && sum < 50) {
//   console.log(sum / 3);
// } else {
//   console.log(sum + 10);
// }

// Задание №3
// Вам дан сложный вложенный список. Используя цикл выведите все элементы в виде ключ: значение
// Ввод:
// let aboutUs = [
// ["name", "Mition"],
// ["type", "Web"],
// ["place", "Bishkek"],
// ["languages", "JavaScript, Python"],
// ["simply", "the best!"]
// ];

// Вывод:
// name: Motion
// type: Web
// place: Bishkek
// languages: JavaScript, Python
// simply: the best!

// ПИСАТЬ КОД ЗДЕСЬ

// let aboutUs = [
//   ["name", "Mition"],
//   ["type", "Web"],
//   ["place", "Bishkek"],
//   ["languages", "JavaScript, Python"],
//   ["simply", "the best!"],
// ];

// for (let i of aboutUs) {
//   let a = i[0];
//   let b = i[1];
//   console.log(`${a}: ${b}`);
// }

// Задание №4
// Есть объект users в котором перечислен
// возраст участников. Напишите код,
// который выведет суммарный возраст
// всех участников. Решите задачу через
// цикл for...in.

// let users = {
// John: 28,
// Mark: 30,
// David: 25,
// Richard: 42
// };

// ПИСАТЬ КОД ЗДЕСЬ

// let users = {
//   John: 28,
//   Mark: 30,
//   David: 25,
//   Richard: 42,
// };
// let sum = 0;
// for (let i in users) {
//   sum += users[i];
// }
// console.log(sum);

// Задание №5
// Напишите функцию removeElem(arr, element), которая принимает 2 аргумента.
// Первый аргумент- это массив.
// Второй аргумент- это элемент который нужно удалить из массива.
// Пример: let arr = [2, ‘hello’, true, ‘world’, 5, ‘js’]
// removeElem(arr,’world’)
// Ответ: [2, ‘hello’, true, 5, ‘js’]

// ПИСАТЬ КОД ЗДЕСЬ

// function removeElem(arr, element) {
//   let res = [];
//   for (let i of arr) {
//     if (i !== element) {
//       res.push(i);
//     }
//   }
//   return res;
// }
// console.log(removeElem([2, "hello", true, "world", 5, "js"], "world"));

// function removeElem(arr, element) {
//   let res = arr.filter((el) => el != element);
//   console.log(res);
// }
// removeElem([2, "hello", true, "world", 5, "js"], "world");

// Задание №6
// Напишите функцию palindrom(word), принимающая один аргумент word.
// Функция, должна выводить в консоль true, если строка является палиндромом, в обратном случае false. При этом нужно учитывать пробелы и регистр.
// Палиндром – слово, которое читается одинаково слева направо и справа налево (например, ротор)

// Пример №1:
// Ввод: tenet
// Ответ: true

// Пример №2:
// Ввод: my gym
// Ответ: true

// Пример №3Ж
// Ввод: nolan
// Вывод: false

// ПИСАТЬ КОД ЗДЕСЬ

// function palindrom(word) {
//   let result= word.split("").reverse().join("") === newWord;
// }
// console.log(palindrom("tenet"));

// Задание №7
// Дан лимит = 1000, напишите функцию, которая будет выводить в консоль
// удвоенное значение аргумента до тех пор, пока оно не достигнет лимита,
//и после этого вывести в консоль аргументы в обратном порядке (использовать цикл while)

// Например:

// Ввод: functionLimit(50)
// Вывод:
// 50
// 100
// 200
// 400
// 800
// 800
// 400
// 200
// 100
// 50

// ПИСАТЬ КОД ЗДЕСЬ

// function functionLimit(num) {
//   let newNum = num;
//   while (num < 1000) {
//       console.log(num);
//       num = num * 2;
//   }
//   while (num > newNum) {
//     num = num / 2;
//     console.log(num);
//   }
// }
// functionLimit(50);

// Задание №8
// Дан массив со строками. Оставьте в нем только те строки, длина которых больше 5-ти символов.
// Используйте метод filter()

// ПИСАТЬ КОД ЗДЕСЬ

// let arr = ["Islam", "Aidana", "Azamat", "Malika", "Aziz"];
// let newArr = arr.filter((el) => el.length > 5);
// console.log(newArr);

// Задание №9
// Дан массив
// let task2 = [10, 25, 25, 15, 5, 10];
// Выведите в alert сумму элементов
// этого массива.
// Используйте метод .forEach()

// ПИСАТЬ КОД ЗДЕСЬ

// let task2 = [10, 25, 25, 15, 5, 10];
// let sum = 0;
// task2.forEach((el) => (sum += el));
// alert(sum)

// Задание №10
// Напишите функцию, определяющую
// максимальное количество повторяющихся
// элементов в массиве.
// Массив для примера:
// let task5 = [4, 5, 5, 5, 3, 5, 2, 3, 1, 3, 4];

// ПИСАТЬ КОД ЗДЕСЬ

// let arr = [4, 5, 5, 5, 3, 5, 2, 3, 1, 3, 4];
// let res = {};
// arr.forEach((num) => {
//   res[num] = res[num] + 1 || 1;
// });

// console.log(res);

//  Задание №11
// Дан массив nums = [8,1,2,2,3]
// Напишите функцию, которая будет возвращать массив,
// в котором указано сколько есть чисел в массиве меньше,
// чем каждый элемент массива.
// Используйте метод map()
// Пример №1:
// Ввод: nums = [8,1,2,2,3]
// Вывод: [4,0,1,1,3]
// 4 элемента меньше чем 8
// 0 элементов меньше чем 1
// 1 элемент меньше чем 2
// 1 элемент меньше чем 2
// 3 элемента меньше чем 3

// Пример №2:
// Ввод: nums = [6,5,4,8]
// Вывод: [2,1,0,3]

// ПИСАТЬ КОД ЗДЕСЬ

// let nums = [6, 5, 4, 8];

// let nums = [8, 1, 2, 2, 3];
// let sum = 0;
// let newNum = nums.map((el) => {
//     return
// });
// console.log(newNum);

// function task(nums) {
//   let newNus = nums.map((el) => nums.filter((element) => element < el).length);
//   return newNus;
// }
// console.log(task([8, 1, 2, 2, 3]));

// Дана строка: 'Hello, world!', необходимо вывести в консоль
// каждый символ по-отдельности(игнорировать спец.
//    и проьельные символы(то есть, ' ', '!', ',' выводить не нужно))

// let str = "Hello, world!";
// let b = "";
// for (let i of str) {
//   if (i !== "," && i !== "!") {
//     b += i;
//   }
// }
// console.log(b);

// Дан объект {js:'test', jq: 'hello', css: 'world'}. Получите массив его ключей. (Object.keys)

// let obj = {
//   js: "test",
//   jq: "hello",
//   css: "world",
// };

// console.log(Object.keys(obj));

// Дан массив [1, 2, 3]. Сделайте из него массив [3, 2, 1] одной командой.

// let arr = [1, 2, 3];
// arr.reverse();
// console.log(arr);

// Дан массив ['js', 'css', 'jq']. Выведите на экран первый элемент. (методы shift pop)

// let arr = ["js", "css", "jq"];
// console.log(arr.pop());

// Пример: Дана строка 'The Quick Brown Fox'. Результатом должно быть: 'tHE qUICK bROWN fOX'

// let str = "The Quick Brown Fox";

// str = str.split("");
// let newArr = str.filter((el) => (el.toUpperCase() ? el.toLowerCase() : false));
// console.log(newArr);

// let newArr = [];
// for (let i of str) {
//   if (i === i.toUpperCase()) {
//     newArr.push(i.toLowerCase());
//   } else {
//     newArr.push(i.toUpperCase());
//   }
// }
// console.log(newArr.join(""));

// let str = "The Quick Brown Fox";
// str = str.split("");
// let arr = str.map((el) => {
//   if (el === el.toUpperCase()) {
//     return el.toLowerCase();
//   } else {
//     return el.toUpperCase();
//   }
// });
// console.log(arr.join(""));

// Дана функция checkTask(arr) которая принимает массив с предложениями//.
// Необходимо вернуть новый массив с количеством слов в каждом предложении.

// Пример: ["alice and bob love leetcode", "i think so too", "this is great thanks very much"]

// function checkTask(arr) {
//   let str = arr.join("").split(" ");
//   let res = [];
//   for (let i of str) {
//     res.push(i.length);
//   }
//   console.log(res);
// }

// checkTask([
//   "alice and bob love leetcode",
//   "i think so too",
//   "this is great thanks very much",
// ]);

// Задание №1
// Создайте функцию которая выводит в консоль все аргументы
// P.S. используйте [...arguments]

// function checkTask(arr) {
//   console.log(...arguments);
// }
// checkTask([1, 2, 3, 4, 5, 6]);

// Задание №2
// Фаренгейт. Напишите функцию которая конвертирует градусы Цельсия в градусы
// Фаренгейта.
// C-температура в цельсиях,
// F-температура в фаренгейтах,
// F=1.8*C+32,

// Задание №3
// Есть функция checkTask(arr, a, b) которая принимает в аргументы массив из чисел,
// начальное число и конечное число. При помоши метода filter необходимо вернуть новый массив
// в котором будут числа в диапазоне от числа a до числа b включительно.
// Пример:
// [1,12,45,3,27,344,122,205], a = 22, b = 200. Результат: [45, 27, 122];
// const checkTask = (arr, a, b) => {}

// function checkTask(arr, a, b) {
//   arr = arr.filter((el) => el > a && el < b);
//   console.log(arr);
// }
// checkTask([1, 12, 45, 3, 27, 344, 122, 205], 22, 200);

// Задание №4
// Напишите функцию checkTask(yearA, yearB) которая будет находить
// все високосные года в диапазоне yearA - yearB.
// Необходимо вернуть массив со всеми найденными результатами.

// Пример: checkTask(1920, 1942); Результат: [1920, 1924, 1928, 1932, 1936, 1940;

// function checkTask(yearA, yearB) {
//   let arr = [];
//   for (let i = yearA; i < yearB; i++) {
//     if (i % 4 === 0) {
//       arr.push(i);
//     }
//   }
//   console.log(arr);
// }
// checkTask(1920, 1942);

// Задание №5
// Дан массив с объектами
// задача, создать функцию, которая будет рассылать сообщения пользователям,
// сообщая о акции в магазине компьютерной техники,
// отправлять сообщения нужно только тем людям, которые тем или иным образом относятся к IT-сфере

// let users = [
//   { name: "Jack", age: 35, work: "IT-backend developer" },
//   { name: "Helen", age: 35, work: "Nurse" },
//   { name: "Bob", age: 35, work: "Driver" },
//   { name: "Jessica", age: 35, work: "IT-frontend developer" },
//   { name: "Hel'ga", age: 35, work: "IT-HR" },
// ];
// let res = users.filter((el) => {
//   return el.work.includes("IT");
// });

// console.log(res);

// Задание №6
// Создать функцию, которая в качестве аргумента будет принимать массив со строками и числами,
// задача, отсортировать числа в отдельный массив, а строки в отдельный и распечатать оба массива

// function task(arr) {
//   let arr1 = [];
//   let arr2 = [];
//   for (let i of arr) {
//     if (typeof i === "number") {
//       arr1.push(i);
//     } else {
//       arr2.push(i);
//     }
//   }
//   console.log(arr1, arr2);
// }
// task(["azamat", 20, "islam", 17]);

// Задание №7
// Напишите функцию, которая принимает в качестве параметров два целых числа и возвращает значение true (истина),
// если в числах одинаковое количество цифр; иначе функция возвращает значение false (ложь).
// Пример: func(2398, 19)
// Вывод: false

// function func(a, b) {
//   let res1 = a.toString();
//   let res2 = b.toString();
//   if (res1.length === res2.length) {
//     return true;
//   } else {
//     return false;
//   }
// }
// console.log(func(196, 119));

// Задание №8
// Дана функция checkTask(arr) которая принимает массив c числами.
// При помощи метода reduce необходимо вернуть новый массив без дубликатов.
// Пример: Дан массив: [18, 21, 1, 1, 51, 18, 21, 5, 18, 7, 10].
// Результат: [18, 21, 1, 51, 5, 7, 10]

// function checkTask(arr) {
//   return arr.reduce((acc, el, ind) => {
//     if (arr.indexOf(el) === ind) {
//       return acc.concat(el);
//     } else {
//       return acc;
//     }
//   }, []);
// }

// console.log(checkTask([18, 21, 1, 1, 51, 18, 21, 5, 18, 7, 10]));

// function checkTask(arr) {
//   return arr.reduce((acc, el) => {
//     if (!acc.includes(el)) {
//       acc.push(el);
//     }
//     return acc;
//   }, []);
// }
// console.log(checkTask([18, 21, 1, 1, 51, 18, 21, 5, 18, 7, 10]));

// Задание №9
// Расчет премии сотрудникам, дан массив с объектами

// salary- это заработная плата в месяц, overTime- количество часов,
// которое сотрудник взял сверхурочно, задача: создать функцию,
// которая будет добавлять к основной зарплате сверхурочное время(1час=200$),
// функция должна принимать массив с объектами и возвращать также массив,
// но уже с измененными данными пример:
// [{name: 'Jack', salary: 10000, overTime: 4}] -> [{name: 'Jack', salary: 10800}]

// let employees = [
//   { name: "Jack", salary: 10000, overTime: 4 },
//   { name: "Tom", salary: 15000, overTime: 3 },
//   { name: "Jessica", salary: 20000, overTime: 9 },
//   { name: "Helen", salary: 25000, overTime: 2 },
//   { name: "Peter", salary: 30000, overTime: 7 },
// ];
// let res = employees.map((el) => {
//   return {
//     name: el.name,
//     salary: el.salary + el.overTime * 200,
//   };
// });
// console.log(res);

// Задание №10
// Вам дан массив числами [10, 20, 30, 40, 135, 2000]. Выведите на экран только те числа из
// массива, которые начинаются на цифру 1, 2 или 5.

// let arr = [10, 20, 30, 40, 135, 2000];
// let newArr = [];
// for (let i of arr) {
//   let res = i.toString();
//   if (res[0] === "1" || res[0] === "2" || res[0] === "5") {
//     newArr.push(+res)
//   }
// }
// console.log(newArr);

// Задание №11
// Вам дан массив высчитать сумму до первого 0

// let arr = [12, 33, 43, 21, 0, 76, 43, 32];
// let sum = 0;
// arr=arr.reduce((acc, el) => {
//   if (el === 0) {
//     sum = acc;
//   } else {
//     acc + el;
//   }
// });
// console.log(sum);

// let res = arr.slice(0, arr.indexOf(0)).reduce((acc, el) => acc + el);
// console.log(res);

// Задание №12
// 6, "I" -> "IIIIII"
// 5, "Hello" -> "HelloHelloHelloHelloHello"

// function repeatStr(one, two) {
//   let str1 = "I";
//   let str2 = "Hello";
//   return `${str1.repeat(one)}, ${str2.repeat(two)}`;
// }
// console.log(repeatStr(2, 5));

// for (let i = 1; i <= one; i++) {
//   str1 += "hello";
// }
// for (let i = 1; i <= two; i++) {
//   str2 += "i";
// }
// console.log(str1);
// console.log(str2);

// let str = "";
// for (let i = 1; i <= 7; i++) {
//   str += "&";
//   console.log(str);
// }
// let str1 = "";
// for (let m = 7; m > 1; m--) {
//   str1 += "*";
//   console.log(str1);
// }

// #
// ##
// ###
// ####
// #####
// ######
// #######
// #######
// ######
// #####
// ####
// ###
// ##
// #

// let str = "";
// for (let i = 1; i <= 7; i++) {
//   str += "#";
//   console.log(str);
// }

// let str = "";
// let i = 1;
// while (i <= 7) {
//   str += "#";
//   console.log(str);
//   i++;
// }

// for (let i = 1; i <= 7; i++) {
//   console.log("#".repeat(i));
// }

// for (let m = 7; m >= 1; m--) {
//   console.log("#".repeat(m));
// }

// let i =1
// let res = []
// while(i <= 7){
//   res.push('#')
//   console.log(res.join(''));
//   i++
// }
// let m = 7
// while(m >= 1){
//   res.pop()
//   console.log(res.join(''));
//   m--
// }

// let str1 = "";
// let t = 1;

//TODO 1. Создайте функцию, которая возвращает массив целых чисел от n до 1,
// где  n > 0. Пример: n = 5 --> [5, 4, 3, 2, 1]

// function checkTask(n) {
//   let arr = [];
//   for (let i = n; i > 0; i--) {
//     arr.push(i);
//   }
//   console.log(arr);
// }
// checkTask(5);

// TODO 2.Вы пишете код для управления светофорами в вашем городе.
// Вам нужна функция для обработки каждого изменения с зеленого на желтый,
// на красный, а затем снова на зеленый. Завершите функцию,
// которая принимает строку в качестве аргумента,
// представляющую текущее состояние источника света, и возвращает строку,
// представляющую состояние, в которое свет должен измениться.
// Например, когда вход зеленый, выход должен быть желтым.

// function checkTask(str) {
//   if (str === "зеленый") {
//     return "желтый";
//   } else if (str === "желтый") {
//     return "красный";
//   } else if (str === "красный") {
//     return "зеленый";
//   }
// }
// console.log(checkTask("желтый"));

// TODO 3. Напишите функцию, которая принимает строку, и возвразает ее в перевернутом виде

// function task(str) {
//   let res = str.split("").reverse().join("");
//   console.log(res);
// }
// task("azamat");

// TODO 4.
// Написать программу, которая будет спрашивать у пользователя добавить/удалить
// элемент из массива, в зависимости от выбора программа должна либо добавлять
// данные в массив либо запрашивать порядковый номер элемента который
// нужно удалить и удалять его из массива, также программа должна после
// всех операций спрашивать хочет ли пользователь повторить действия если да,
// то программа должна спросить снова удалить или добавить и тд,
// использовать цикл while

// let arr = [1, 2, 3];
// let i = true;
// while (i) {
//   let ask = prompt(`${arr} Удалить или добавить?`);
//   if (ask == null) {
//     i = false;
//   } else if (ask == "удалить") {
//     let ask2 = +prompt("Какой элемент удаляем?");
//     if (ask2 == null) {
//       i = false;
//     } else {
//       arr.splice(ask2 - 1, 1);
//     }
//   } else if (ask == "добавить") {
//     let ask3 = prompt("Что будем добавлять?");
//     if (ask3 == null) {
//       i = false;
//     } else {
//       arr.push(ask3);
//     }
//   }
// }
// console.log(arr);

// TODO 5. Создайте функцию checkTask(arr), которая принимает в аргументы массив.
// Функция должна вывести в консоль массив содержащий только уникальные элементы.
// К примеру, для массива:
// ['apple', 'orange', 'apple', 'pear']
// Вывод будет:
// // ['apple', 'orange', 'pear']

// function checkTask(arr) {
//   return arr.reduce((acc, el) => {
//     if (!acc.includes(el)) {
//       acc.push(el);
//     }
//     return acc;
//   }, []);
// }
// console.log(checkTask(["apple", "orange",'orange', "apple", "pear"]));

// Напишите стрелочную функцию checkTask(),
// которая принимает число в параметр min.
// В min может хранится число от 0 до 59.
// Функция должна выводить в консоль в какую четверть часа попадает это число:
// в первую - если число от 0 до 15во вторую - если число от 15 до 30в третью -
// если число от 30 до 45в четвертую - если число от 45 до 59 Если же передали некорректное число,
// например -36 или 156, выведите строку:
// Invalid Input
// используйте конструкцию switch

// let checkTask = (min) => {
//   let one = min >=1 && min < 15;
//   switch (min) {
//     case +one:
//       console.log("в первую четверть");
//       break;
//   }
// };
// checkTask(7);

// Напишите стрелочную функцию weekDay,
// которая принимает параметром число от 1 до 7,
//  а возвращает день недели на русском языке. Если число не верное 'Число не верное'

// let weekDay = (num) => {
//   if (num === 1) {
//     return "понедельник";
//   } else if (num === 2) {
//     return "вторник";
//   } else if (num === 3) {
//     return "среда";
//   } else if (num === 4) {
//     return "четверг";
//   } else if (num === 5) {
//     return "пятница";
//   } else if (num === 6) {
//     return "суббота";
//   } else if (num === 7) {
//     return "воскресение";
//   } else {
//     return "число не верное";
//   }
// };
// console.log(weekDay(7));

// Напишите стрелочную функцию findFirstNotRepeatedChar,
// чтобы найти первый неповторяющийся символ.Например:

// Вывод:
// п

// let findFirstNotRepeatedChar = (str) => {
//   str = str.split("");
//   return str.reduce((acc, el) => {

//   },);
// };
// console.log(findFirstNotRepeatedChar("фывфавыапрс"));

// Напишите функцию checkTask(), которая принимает интервал в виде двух четырехзначных чисел, например 2000 и 3001.

// Функция должна возвратить список всех чисел, в заданном интервале, состоящих из четных цифр.

// function checkTask(a, b) {
//   for (let i = a; i <= b; i++) {
//     if (i % 2 === 0) {
//       console.log(i);
//     }
//   }
// }
// checkTask(2000, 3001);

// Во всех задачах используйте только методы map, reduce.
// 1. Вам дан массив с числами [5,15,315,2,13,20,9]. Найдите сумму этих чисел.

// let arr = [5, 15, 315, 2, 13, 20, 9];
// let res = arr.reduce((acc, el) => acc + el);
// console.log(res);

// 2. Вам дан массив с числами [5,12,314,2,13,20,9]. Найдите сумму всех четных чисел.

// let arr = [5, 12, 314, 2, 13, 20, 9];
// let res = arr.reduce((acc, el) => {
//   if (el % 2 === 0) {
//     return acc + el;
//   } else {
//     return acc;
//   }
// }, 0);
// console.log(res);

// 3. Вам дан массив с числами [5,15,315,2,13,20,9]. Найдите сумму чисел, которые больше 10.

// let arr = [5, 15, 315, 2, 13, 20, 9];
// let sum = 0;
// let res = arr.map((el) => {
//   if (el > 10) {
//     sum += el;
//   }
// });
// console.log(sum);

// 4. Вам дан массив с числами [3,13,54,15,335, 39]. Найдите разность чисел, которые больше 10.

// let arr = [3, 13, 54, 15, 335, 39];
// let sum = 0;

// 5. Вам дан массив с строками ['Аскар', 'Баяман', 'Калмамат']. Сложите все строки и выведите длину результата.

// let arr = ["Аскар", "Баяман", "Калмамат"];

// let res = arr.map((el) => el);
// console.log(res.join("").length);

// let res = arr.reduce((acc, el) => acc + el);
// console.log(res.length);

// 6. Вам дан массив с строками ['Аскар', 'Баяман', 'Калмамат']. Выведите все строки в верхнем регистре, используя map.

// let arr = ["Аскар", "Баяман", "Калмамат"];
// let res = arr.map((el) => el.toUpperCase())
// console.log(res);

// 7. Вам дан массив с строками ['Аскар', 'Баяман', 'Калмамат']. Выведите все вторые строки в верхнем регистре.

// let arr =  ['Аскар', 'Баяман', 'Калмамат']
// let res = arr.map((el,ind)=>{
//     if(ind % 2 !== 0){
//         return el.toUpperCase()
//     }else{
//         return el
//     }
// })
// console.log(res);

// 8. Напишите функцию, которая принимает str, target.
// И возвращает true или false, если targer присутствует в str.
// Использовать .reduce для этого.
// Пример: isPresent ('abcd', 'b') => true
// isPresent ('efghi', 'a') // => false

// function checkTask(str, target) {
//   let res = str.reduce((acc, el) => acc + el);
// }
// checkTask("abcd", "b");

// 9. Вам дан массив с строками ['асКар', 'бЯяман', 'калМмамат']. Используйте заглавные буквы в каждом массиве имен.
// Пример: (["john", "JACOB", "jinGleHeimer", "schmidt"])), => ["John", "Jacob", "Jingleheimer", "Schmidt"]

// let arr = ["асКар", "бЯяман", "калМмамат"];
// let res = arr.map((el) => {
//   return el.slice(0, 1).toUpperCase() + el.slice(1).toLowerCase();
// });
// console.log(res);

// 10. Вам дан массив со строками ['Баяман', 'Калмамат']. Поменяйте местами первые буквы строк.

// let arr = ["Баяман", "Калмамат"];

// let newArr = arr.map((el) => el[0]);
// console.log(newArr);

// 11. Вам дан массив [true, '1234', 325]. Напишите функцию, которая проверяет,
// все ли элементы массива относятся к одному типу данных.

// function task(arr) {
//   let res = arr.map((el) => typeof el);
//   if ((res[0] === res[1]) === res[2]) {
//     console.log(true);
//   } else {
//     console.log(false);
//   }
// }
// task([true, "1234", 325]);

// 12. Вам дана строка 'тестинг'. Ваша задача - вернуть средний символ слова.
//Если длина слова нечетная, верните средний символ. Если длина слова четная, вернуть 2 средних символа.

// let str =  'тестинг'

// 13. Вам дан массив с числами [5, -3, 13, -7, 45]. Верните сумму всех положительных чисел.

// let arr = [5, -3, 13, -7, 45];
// let sum = 0;
// let newArr = arr.map((el) => {
//   if (el > 0) {
//     return (sum += el);
//   }
// });
// console.log(sum);

// 14. Вам дан массив с числами [5, -54, 13, -7, 45, -15, -34].
// Верните сумму всех отрицательных чисел, которые больше 10.

// let arr = [5, -54, 13, -7, 45, -15, -34];

// let res = arr.filter((el) => el < -10).reduce((acc, el) => acc + el);
// console.log(res);

// let sum = 0;
// let res = arr.map((el) => {
//   if (el < -10) {
//     sum += el;
//   }
// });
// console.log(sum);

// 15. Вам дан массив с числами [1, 65, 13 , 30, 100] - все числа - доллары.
// Вам нужно обменять эти доллары по курсу сома и вывести все числа в сомах.

// let arr = [1, 65, 13, 30, 100];
// let newArr = arr.map((el) => el * 89, 32);
// console.log(newArr);

// 16. Вам дан массив со строками ['Lorem ipsum dor sit omet devour il ela sit'].
// Выведите каждый нечетный индекс в строке в верхнем регистре.

// function checkTask(arr) {
// //   let res = arr.join("").split(" ");
//   res = arr.map((el, index) => {
//     if (el.length % 2 !== 0) {
//       return el.toUppercase()
//     }
//   });
//   console.log(res);
// }
// checkTask(["Lorem ipsum dor sit omet devour il ela sit"]);

// 17. Вам дан массив с строками ['Оскар', 'Баяман', 'Калмамат']. Добавьте к каждой строке нумерацию.

// let arr = ['Оскар', 'Баяман', 'Калмамат']

// let res = arr.map((el,ind)=>{
//     return ind + ': '+el
// })
// console.log(res);

// 18. Вам дан массив с числами [2,456,6,8]. Напишите функцию ,
// которая вставляет дефис (-) между каждыми двумя четными числами.
// Например, если вы принимаете 025468, на выходе должно быть 0-254-6-8.

// let arr = [2, 456, 6, 8];

// let res = arr.map((el) => el);

// function task(sf) {

//   let res = sf.map((el) => {
//     if (+el % 2 === 0) {
//       return +el
//     }
//   });
//   console.log(res);
// }
// task(["024568"]);

// 20. Вам дан массив с числами [5,15,315,2,13,20,9]. Посчитайте среднее арифметическое чисел в массиве.

// let arr = [5, 15, 315, 2, 13, 20, 9];

// let res = arr.reduce((acc, el) => acc + el);

// console.log(res / arr.length);

// FIND

// const arr = [1, 2, 3, 4, 5];
// let res = arr.find((el) => el > 5);
// console.log(res);

//EVERY

// const arr = ["a", "a", "a"];
// let res = arr.every((el) => el === "a");
// console.log(res);

//SOME

// const arr = ["a", "b", "a"];
// let res = arr.some((el) => el === "a");
// console.log(res);

//INDEXOF

// let arr = ["azima", "malika", "azamat"];

// let res = arr.indexOf("azima");
// console.log(res);

//TODO1 Создайте функцию checkTask(arr),
// которая принимает в аргументы массив состоящий из строк и выводит
// в консоль новый массив состояший только из первых и последних букв каждой строки.
// Например, для массива:
// ['hi', 'goodbye', 'smile']
// Вывод будет:
// ['hi', 'ge', 'se']

// function checkTask(arr) {
//   return arr.map((el) => {
//     return el[0] + el.slice(-1);
//   });
// }
// console.log(checkTask(["hi", "goodbye", "smile"]));

//TODO2 Дан массив с числами. Проверьте то, что все элементы в массиве положительные every

// let arr = [5, 6, 7, 8, 9];
// let res = arr.every((el) => el > 0);
// console.log(res);

//TODO3 Дан массив let total = [ 1, 5, 0, 3, 6 ];
// Суммируйте все значения в данном массиве и выведите результат в alert(). Используйте метод reduce().

// let total = [ 1, 5, 0, 3, 6 ]
// let res = total.reduce((acc,el)=> acc+el)
// alert(res)

//TODO4  Дан массив let lengthName = [`Patricia` , William , Barbara , James , Chloe , Elizabeth ];
// Преобразуйте каждый элемент в его длину и выведите в console. Используйте метод map().

// let lengthName = [
//   `Patricia`,
//   " William ",
//   " Barbara ",
//   "James",
//   "Chloe",
//   " Elizabeth ",
// ];

// let res = lengthName.map((el)=> el.length)
// console.log(res);

//TODO5  Дан массив с объектами: [
// {mark: 'Wolksvagen', year: 2005, price: 8000, sale: 0},
// {mark: 'Audi', year: 1996, price: 2500, sale: 0},
// {mark: 'Mercedes', year: 2001, price: 5000, sale: 0},
// {mark: 'BMW', year: 2015, price: 18000, sale: 0},
// {mark: 'Porsche', year: 2020, price: 120000, sale: 0},

// ], задача: на все автомобили, которые старше 2007 года, поставить скидку 20%(для скидки использовать свойство 'sale')

// let arr = [
//   { mark: "Wolksvagen", year: 2005, price: 8000, sale: 0 },
//   { mark: "Audi", year: 1996, price: 2500, sale: 0 },
//   { mark: "Mercedes", year: 2001, price: 5000, sale: 0 },
//   { mark: "BMW", year: 2015, price: 18000, sale: 0 },
//   { mark: "Porsche", year: 2020, price: 120000, sale: 0 },
// ];

// let res = arr.map((el) => {
//   return {
//     mark: el.mark,
//     year: el.year,
//     price: el.price,
//     sale: el.year < 2007 ? el.price - (el.price * 20) / 100 : 0,
//   };
// });
// console.log(res);

// DISKGFGHKJH

// let arr = ["Aziz", "Yntymak", "Azima", "Malika", "Aidana"];

// let [a, b, ...other] = arr;

// console.log(other);

// let obg = {
//   name:'azima',
//   age:12,
//   arr: [1,2,3]
// }
// let {name,age,arr:[a,b,c]}=obg
// console.log(a);

// let arr = [1,2,3,4,5]
// function checkTask(a,b,c,d,e,i){
// console.log(...arguments);
// }
// checkTask(...arr)

// let obj = {
//   name:'malika',
//   age:20,

// }
// function checkTask({name}){
// console.log(name);
// }
// checkTask(obj)

// console.log(this);

// Деструктуризация. Класснная работа.

// Задание №1
// Дан массив [ "первый", "второй","третий", "четвертый","пятый","шестой","седьмой" ];
// Запишите первый элемент этого массива впеременную elem1,
// второй - в переменную elem2, третий - в переменную elem3,
// а все остальные элементы массива - в переменную arr.

// let arr = [ "первый", "второй","третий", "четвертый","пятый","шестой","седьмой" ]

// let [elem1,elem2,elem3,...arr1] = arr
// console.log(arr1);

// Задание №2
//  Дан объект { name: "Петр", surname: "Петров", age: "20 лет" }.
// Запишите соответствующие значения в переменные name, surname и age.

// let obj = {
//   name: "Петр",
//   surname: "Петров",
//   age: "20 лет",
// };
// let  {name,surname,age}=obj
// console.log();

// Задание №3
// Дан массив.
// Запишите последний элемент этого массива в переменную elem1,
// а предпоследний - в переменную elem2.

// let task3 = [
//   "первый",
//   "второй",
//   "третий",
//   "четвертый",
//   "пятый",
//   "шестой",
//   "седьмой",
// ];
// let [, , , , , elem2, elem1] = task3;
// console.log(elem1);

// Задание №4
// Напишите функцию, которая принимает массив из чисел в качестве аргумента.
// Каждое число возвести в квадрат. Затем, функция должна вернуть измененный массив.
// Деструктурируйте полученный результат, т.е. первый элемент записать в переменную, а остальные элементы
// сохранить в новом массиве.

// function checkTask(arr) {
//   let res = arr.map((el) => el ** 2);
//   let [one, ...other] = res;
//   console.log(other);
// }
// checkTask([1, 2, 3, 4, 5]);

// Задание №5
// Дан объект {name: 'Luck', 'age': '22', }.
// Запишите соответствующие значения в переменные name, и age.
// Сделайте так, чтобы если какое-то значение не задано - оно принимало значение по умолчанию.

// let obj = {
//   name: "",
//   age: '',
// };

// let { name, age } = obj
// if(name === ''){
//   name = 'azima'
// }
// if(age === ''){
//   age = '20'
// }
// console.log(name);
// console.log(age);

// 1. Найти первый элемент в массиве, который больше 10.
// output: 40

// let arr = [1, 2, 5, 3, 6, 8, 40, 9, 70];
// let res = arr.find((el) => el > 10);
// console.log(res);

// 2. Проверить, все ли элементы массива являются положительными числами.
// output: false

// let arr = [1, 2, 4, 11, 6, 23, -0, 88, 67, 3];
// let res = arr.every((el)=> el > 0)
// console.log(res);

// 3. Проверить, есть ли в массиве хотя бы один элемент, равный 0.
// output: true

// let arr = [5, 6, 3, 2, 7, 4, 0, 23, 16, 73, 28];
// let result = arr.some((el) => el === 0);
// console.log(result);

// 4. Найти первое четное число в массиве.
// output: 44

// let arr = [3, 5, 7, 1, 33, 77, 44];
// let result = arr.find((el) => el % 2 === 0);
// console.log(result);

// let arr = [1, 2, 4, 11, 6, 23, 1, 88, 67, 3];
// let res = arr.every((el) => el > 0);
// console.log(res);
// 5. Проверить, все ли строки в массиве содержат более 5 символов.
// output: false

// let person = [
//   "Yntymak",
//   "Malika",
//   "Azima",
//   "Abdylaziz",
//   "Aitunuk",
//   "Aidana",
//   "Elvira",
// ];
// let res = person.every((el) => el.length < 5);
// console.log(res);

// 6. Проверить, есть ли в массиве хотя бы одно отрицательное число.
// output: true

// let arr = [1, 2, 4, 11, 6, 23, -1, 88, 67, 3];
// let res = arr.some((el) => el < 0);
// console.log(res);

// 7. Найти первую строку в массиве, которая начинается с буквы "M".
// output: Malika

// let person = [
//   "Yntymak",
//   "Malika",
//   "Azima",
//   "Abdylaziz",
//   "Aitunuk",
//   "Aidana",
//   "Elvira",
// ];
// let res = person.find((el) => el[0] === "M");
// console.log(res);

// 8. Проверить, все ли элементы массива являются четными числами.
// output: false

// let arr = [3, 5, 7, 1, 33, 77, 44];
// let res = arr.every((el) => el % 2 === 0);
// console.log(res);

// 9. Проверить, есть ли в массиве хотя бы одна строка, содержащая только цифры.
// output: false

// let person = [
//   "Yntymak",
//   "Malika",
//   "Azima",
//   "Abdy1aziz",

//   "Aitunuk",
//   "Aidana",
//   "Elvira",
// ];
// let res = person.some((el) => typeof el === "number");
// console.log(res);

// 10. Найти первый элемент массива, который делится на 3 без остатка.
// output: 9

// let arr = [5, 7, 1, 8, 9, 77, 44];
// let res = arr.find((el) => el % 3 === 0);
// console.log(res);

// 11. Проверить, все ли элементы массива больше 0.
// output: true

// let arr = [1, 2, 4, 11, 6, 23, 1, 88, 67, 3];
// let res = arr.every((el) => el > 0);
// console.log(res);

// 12. Проверить, есть ли в массиве хотя бы одна строка, начинающаяся с заглавной буквы.
// output: true

// let person = [
//   "yntymak",
//   "malika",
//   "Azima",
//   "abdy1aziz",
//   "aitunuk",
//   "Aidana",
//   "lvira",
// ];
// let res = person.some((el) => el[0] === el[0].toUpperCase());
// console.log(res);

// FIND

// const arr = [1, 2, 3, 4, 5];
// let res = arr.find((el) => el > 2);
// console.log(res);

//EVERY

// const arr = ["a", "a", "a"];
// let res = arr.every((el) => el === "a");
// console.log(res);

//SOME

// const arr = ["a", "b", "a"];
// let res = arr.some((el) => el === "a");
// console.log(res);

//INDEXOF

// let arr = ["azima", "malika", "azamat"];
// let res = arr.indexOf("azima");
// console.log(res);

// 13. Найти первый элемент массива, который меньше 5.
// output: -7

// let arr = [7, 8, 20, 70, 10, -7, 8];
// let res = arr.find((el) => el < 5);
// console.log(res);

// 14. Проверить, все ли элементы массива являются строками.
// output: false

// let person = [
//   "Yntymak",
//   "Malika",
//   "EdyaChan",
//   11,
//   "Azima",
//   "Abdulaziz",
//   "Aidana",
// ];
// let res = person.every((el) => typeof el === "string");
// console.log(res);

// 15. Проверить, есть ли в массиве хотя бы один элемент, равный "apple".
// output: true

// let person = [
//   "Yntymak",
//   "Malika",
//   "EdyaChan",
//   "Azima",
//   "Abdulaziz",
//   "аpple",
//   "Aidana",
// ];
// let res = person.some((el) => el === 'аpple');
// console.log(res);

// 16. Найти первый элемент массива, который содержит подстроку "JavaScript".
// output: "JavaScript"

// let programming = ["HTML", "CSS", "JavaScript", "React", "TypeScript", "Redux"];
// let res = programming.find((el) => el === "JavaScript");
// console.log(res);

// 17. Проверить, все ли элементы массива положительны.
// output: true

// let arr = [12, 44, 55, 33, 44, 12];
// let res = arr.every((el) => el > 0);
// console.log(res);

// 18. Проверить, есть ли в массиве хотя бы одна строка, длина которой больше 10 символов.
// output: false

// let person = [
//   "Yntymak",
//   "Malika",
//   "EdyaChan",
//   "Azima",
//   "Abdulaziz",
//   "аpple",
//   "Aidana",
// ];
// let res = person.some((el) => el.length > 10);
// console.log(res);

// 19. Найти первый элемент массива, который является нечетным числом.
// output: 55

// let arr = [12, 44, 55, 33, 44, 12];
// let res = arr.find((el) => el % 2 !== 0);
// console.log(res);

// 20. Проверить, все ли элементы массива являются отрицательными числами.
// output: false

// let arr = [7, 8, 20, 70, 10, -7, 8];
// let res = arr.every((el) => el < 0);
// console.log(res);

// 21. Проверить, есть ли в массиве хотя бы один элемент, равный "banana".
// output: true

// let person = [
//   "Yntymak",
//   "Malika",
//   "EdyaChan",
//   "bananа",
//   "Azima",
//   "Abdulaziz",
//   "Aidana",
// ];
// let res = person.some((el) => el === "bananа");
// console.log(res);

// 22. Проверить, есть ли в массиве хотя бы один элемент, являющийся палиндромом.
// output: "my gym"

// let arr = [
//   "ынтымак",
//   "азима",
//   "малика",
//   "my gym",
//   "абдулазиз",
//   "айдана",
//   "айтунук",
//   "эльвира",
// ];
// let res = arr.some((el) => el === el);
// console.log(res);

// 23. Найти первый элемент массива, который больше 100.
// output: false

// let arr = [7, 8, 20, 70, 10, -7, 8];
// let res = arr.find((el) => el > 100);
// console.log(Boolean(res));

// 24. Проверить, все ли элементы массива являются целыми числами.
// output: false

// let arr = [7, 8, 20, 70, 10, -7, 8, 1.5];
// let res = arr.every((el) => el === (el ^ 0));
// console.log(res);

// 25. Проверить, есть ли в массиве хотя бы одна строка, заканчивающаяся на "tion".
// output: true

// let person = [
//   "Yntymak",
//   "tenet",
//   "Malika",
//   "EdyaChan",
//   "motion",
//   "Azima",
//   "Abdulaziz",
//   "Aidana",
// ];
// let res = person.some(
//   (el) =>
//     (el === person.join(" ").split("").reverse().join(" ")) ===
//     person.join(" ").split("").join(" ")
// );
// console.log(res);

// function palindrom(word) {
//   return word.join('').split(" ").reverse().join("") === word.join('').split(" ").join("");
// }
// console.log(palindrom(["mgym"]));

// function palindrom(word) {
//   let newWord = word;
//   return word.split(" ").reverse().
// }
// palindrom("my gym");

// Задание №1
// Создайте объект в переменной programmer. Дайте объекту имя,
// фамилию, возраст, язык программирования и зарплату. Выведите каждое свойство объекта по очереди в консоль.

// ПИСАТЬ КОД ЗДЕСЬ

// let obj = {
//   name: "Azima",
//   ferst_name: "Dautkalyeva",
//   language: "JavaScript",
//   price: 12345,
// };

// let { name, ferst_name, language, price } = obj;
// console.log(name, ferst_name, language, price);

// Задание №2
// #
// ##
// ###
// ####
// #####
// ######
// #######

// ПИСАТЬ КОД ЗДЕСЬ

// let str = "";
// for (let i = 1; i <= 7; i++) {
//   str += "#";
//   console.log(str);
// }

// Задание №4
// Есть объект users в котором перечислен
// возраст участников. Напишите код,
// который выведет суммарный возраст
// всех участников. Решите задачу через
// цикл for...in.

// ПИСАТЬ КОД ЗДЕСЬ

// let users = {
//   John: 28,
//   Mark: 30,
//   David: 25,
//   Richard: 42,
// };
// let sum = 0;
// for (let i in users) {
//     sum += users[i]
// }
// console.log(sum);

// Задание №5
// Напишите функцию removeElem(arr, element), которая принимает 2 аргумента.
// Первый аргумент- это массив.
// Второй аргумент- это элемент который нужно удалить из массива.
// Пример:
// let arr = [2, ‘hello’, true,  ‘world’,  5, ‘js’]
//     removeElem(arr,’world’)
// Ответ: [2, ‘hello’, true,  5, ‘js’]

// // ПИСАТЬ КОД ЗДЕСЬ

// function checkTask(arr, element) {
//   let res = arr.filter((el) => el !== element);
//   console.log(res);
// }
// checkTask([2, "hello", true, "world", 5, "js"], "world");

// Задание №6
// Напишите функцию palindrom(word), принимающая один аргумент word.
// Функция, должна выводить в консоль true, если строка является палиндромом, в обратном случае false. При этом нужно учитывать пробелы и регистр.
// Палиндром – слово, которое читается одинаково слева направо и справа налево (например, ротор)

// Пример №1:
// Ввод: tenet
// Ответ: true

// Пример №2:
// Ввод: my gym
// Ответ: true

// Пример №3Ж
// Ввод: nolan
// Вывод: false

// ПИСАТЬ КОД ЗДЕСЬ

// let palindrom = function (str) {
//     let res =
//       str.split(" ").join("").split("").reverse().join("") ===
//       str.split(" ").join("").split("").join("");
//     console.log(res);
//   };
//   palindrom("my hhyyyym");

// Задание №7
// Дан лимит = 1000, напишите функцию, которая будет выводить в консоль удвоенное значение
// аргумента до тех пор, пока оно не достигнет лимита, и после этого вывести в консоль аргументы в обратном порядке (использовать цикл while)

// Например:

// Ввод: functionLimit(50)
// Вывод:
// 50
// 100
// 200
// 400
// 800
// 800
// 400
// 200
// 100
// 50

// ПИСАТЬ КОД ЗДЕСЬ

// function Limit(num) {
//   let newnum = num;
//   while (num < 1000) {
//     console.log(num);
//     num = num * 2;
//   }
//   while (newnum < num) {
//       num = num / 2;
//       console.log(num);
//   }
// }
// Limit(50);

// Задание №8
// Дан массив со строками. Оставьте в нем только те строки, длина которых больше 5-ти символов.
// Используйте метод filter()

// ПИСАТЬ КОД ЗДЕСЬ

// let str = ["dfghjk", "dfghj", "nk"];
// let res = str.filter((el) => el.length > 5);
// console.log(res);

// Задание №9
// Дан массив
// Выведите в alert сумму элементов
// этого массива.
// Используйте метод .forEach()

// ПИСАТЬ КОД ЗДЕСЬ

// let task2 = [10, 25, 25, 15, 5, 10];
// let sum = 0
// task2.forEach((el)=> sum += el)
// alert(sum)

// Задание №10
//  Напишите функцию, каторый удаляет дубликаты
// Массив для примера:

// ПИСАТЬ КОД ЗДЕСЬ

// let task5 = [4, 5, 5, 5, 3, 5, 2, 3, 1, 3, 4];
// let res = task5.reduce((acc, el) => {
//   if (!acc.includes(el)) {
//     acc.push(el);
//   }
//   return acc;
// }, []);
// console.log(res);

// Задание №11
// Дан массив nums = [8,1,2,2,3]
// Напишите функцию, которая будет возвращать массив, в котором указано сколько есть чисел в массиве меньше,
// чем каждый элемент массива.
// Используйте метод map()
// Пример №1:
// Ввод: nums = [8,1,2,2,3]
// Вывод: [4,0,1,1,3]
// 4 элемента меньше чем 8
// 0 элементов меньше чем 1
// 1 элемент меньше чем 2
// 1 элемент меньше чем 2
// 3 элемента меньше чем 3

// Пример №2:
// Ввод: nums = [6,5,4,8]
// Вывод: [2,1,0,3]

// ПИСАТЬ КОД ЗДЕСЬ

// function task(nums) {
//   let newNus = nums.map((el) => nums.filter((element) => element < el).length);
//   return newNus;
// }
// console.log(task([8, 1, 2, 2, 3]));

// Задание №12
// Вам нужно поменять местами значения
// переменных при помощи деструктуризации.
// Пример результата:
// console.log(a, b); // 1, 0

// ПИСАТЬ КОД ЗДЕСЬ

// let a = 0;
// let b = 1;
// [a, b] = [b, a]
// console.log(a,b);

// let arr = [a,b]
// console.log(arr.reverse());

// let arr = [a, b];
// let res = ([b, a] = arr);
// console.log(res);

// Задание №13
// Дан объект { size: { width: 100, height: 200 }, items: ["Cake", "Donut"], extra: true}.
// Деструктуризуйте все свойства и элементы данного объекта, включая вложенные объекты и массивы и выведите в консоли.

// ПИСАТЬ КОД ЗДЕСЬ

// let obj = {
//   size: { width: 100, height: 200 },
//   items: ["Cake", "Donut"],
//   extra: true,
// };

// let {
//   size: { width: one, height: two },
//   items:[a,b],
//   extra:bool,
// } = obj;

// console.log(one,two, a,b, bool);

// TODO 1
// Напишите функцию, которая преобразует строку в формат "CamelCase",
// то есть делает каждое слово в строке начиная с заглавной буквы и убирает пробелы.
// Например, "hello world" должно стать "HelloWorld".

// function checkTask(str) {
//   str = str.split(" ");
//   let res = str.map((el) => {
//     return el[0].toUpperCase() + el.slice(1).toLowerCase();
//   });
//   console.log(res.join(""));
// }
// checkTask("hello world");

//TODO 2
// Создайте функцию, которая принимает на вход массив чисел и возвращает новый массив,
//  содержащий только числа, которые делятся на 3 и 5 без остатка.

// function task(arr) {
//   let res = arr.filter((el) => el % 3 || 5 === 0);
//   console.log(res);
// }
// task([12, 34, 56, 78, 90, 100]);

//TODO 3
// Вам дана функция с параметрами s1 и s2 присвойте им "+-+-", "+--+"
// если каждое значение этой строки равны то верните само значение иначе "0"
// OUTPUT: "+-00"

// function task(s1, s2) {
//     return s1.split('').map((el,idx) => el === s2[idx] ? el : '0').join('')
// }
// console.log(task("+-+-", "+--+"));

//TODO 4
// :
// Создайте программу, которая выводит пирамиду из чисел, например:

// 1
// 2 2
// 3 3 3
// 4 4 4 4

// for (let i = 1; i <= 5; i++) {
//   let res = "";
//   for (let m = 1; m <= i; m++) {
//     res += `${i} `;
//   }
//   console.log(res);
// }

//TODO 5
// :
// Дан массив целых чисел, отсортированный по возрастанию.
// Напишите программу, которая находит пропущенные числа в этом массиве.

// function task(arr) {
//   let res = [];
//   for (let i = arr[0] + 1; i < arr[arr.length -1]; i++) {
//       if (!arr.includes(i)) {
//           res.push(i);
//         }
//   }
//   console.log(res);
// }
// task([1, 3, 5, 7, 10]);

// let object = {
//   name: "Azima",
//   age: 18,
//   price: 2000,
//   sayHello() {
//     console.log(`hello my name is ${object.name}`);
//   },
// };
// object.sayHello();

// Islam bayke mentor, [14/11/23 12:51]

// Напишите функцию palindrom(word), принимающая один аргумент word.
// Функция, должна выводить в консоль true, если строка является палиндромом, в обратном
// случае false. При этом нужно учитывать пробелы и регистр. Палиндром – слово, которое
// читается одинаково слева направо и справа налево (например, ротор)

// Пример №1:
// Ввод: tenet
// Ответ: true

// Пример №2:
// Ввод: my gym
// Ответ: true

// Пример №3Ж
// Ввод: nolan
// Вывод: false

// function checkTask(word) {
//   return (
//     word.split(" ").join("").split("").reverse().join("") ===
//     word.split(" ").join("").split("").join("")
//   );
// }
// console.log(checkTask("my gym"));

// Islam bayke mentor, [14/11/23 12:51]

// Дан массив: [1, 10, true, 'hello', 'JS', null, false, 0, {title: 'Samsung', price: 1000}],
// задача, отфильтровать массив, оставив только строки и числа

// let arr = [
//   1,
//   10,
//   true,
//   "hello",
//   "JS",
//   null,
//   false,
//   0,
//   { title: "Samsung", price: 1000 },
// ];

// let res = ([el1, el2, el3, el4, el5, el6, el7, { title: a, b }] = arr);

// let newArr = res.filter((el) => {
//   if (typeof el === "number" || typeof el === "string") {
//     return el;
//   }
// });
// console.log(res);

// Islam bayke mentor, [14/11/23 12:51]

// let users = [
//   { name: "Jack", age: 35, work: "IT-backend developer" },
//   { name: "Helen", age: 35, work: "Nurse" },
//   { name: "Bob", age: 35, work: "Driver" },
//   { name: "Jessica", age: 35, work: "IT-frontend developer" },
//   { name: "Hel'ga", age: 35, work: "IT-HR" },
// ];
// let res = users.filter((el) => {
//   return el.work.includes("IT");
// });

// console.log(res);

// const stringsArray = ['apple', 'banana', 'orange', 'strawberry', 'blueberry'];

// let maxLength = 0;
// let maxLengthString = '';

// for (let i = 0; i < stringsArray.length; i++) {
//     const currentString = stringsArray[i];

//     if (currentString.length > maxLength) {
//         maxLength = currentString.length;
//         maxLengthString = currentString;
//     }
// }

// console.log('Самая длинная строка:', maxLengthString);

// let arr = ["apple", "banana", "orange", "strawberry", "blueberry"];

// let maxStr = arr.reduce((acc, el) => {
//   return el.length > acc.length ? el : acc;
// }, "");

// console.log("Самая длинная строка:", maxStr);
